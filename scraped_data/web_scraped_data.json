[{"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "101", "instructor": "Kanjalkar, S", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Ling, F", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Krishnan, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Schoening, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Iyer, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Fowler, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Dadu, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Dadu, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Ling, F", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Wauck, H", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Yen, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Kumar, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "105", "instructor": "Kumar, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Shaffer, E", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Viswanathan, M", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Silva, M", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "199", "instructor": "Shaffer, E", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Agarwala, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Agarwala, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Bullock, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Bullock, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Bullock, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "210", "instructor": "Winter, G", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "225", "instructor": "Evans, G", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Lowder, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Lowder, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Mahmood, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Mahmood, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Hazlett, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Fong, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Fong, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Hazlett, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Shen, R", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "233", "instructor": "Tran, H", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "240", "instructor": "Harris, A", "description": "Basics of computer systems. Number representations, assembly/machine language, abstract models of processors (fetch/execute, memory hierarchy), processes/process control, simple memory management, file I/O and directories, network programming, usage of cloud services. Prerequisite: CS 225 or both CS 205 and CS 110C++.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Tian, B", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Tian, B", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Green, A", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Sankaran, A", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Green, A", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Sankaran, A", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Sankaran, A", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Michael, N", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Michael, N", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Ding, H", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Ding, H", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "296", "instructor": "Evans, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "296", "instructor": "Padua, D", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Pattanaik, A", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Pattanaik, A", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Li, W", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Li, W", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Saleh, E", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Chen, J", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Chen, J", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Livanos, V", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Livanos, V", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Shankar Narayanan, A", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Zhou, Z", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Yu, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Yu, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Zuo, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Sun, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Kulkarni, R", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Kulkarni, P", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Sie, E", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Shen, Z", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Shen, Z", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Sie, E", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Zhu, Z", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "374", "instructor": "Zhu, Z", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "412", "instructor": "Sinha, S", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "412", "instructor": "Sinha, S", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "413", "instructor": "English, S", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "413", "instructor": "English, S", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "423", "instructor": "Xu, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "423", "instructor": "Xu, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "429", "instructor": "Marinov, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "434", "instructor": "Roy Choudhury, R", "description": "Same as ECE 434. See ECE 434.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "434", "instructor": "Roy Choudhury, R", "description": "Same as ECE 434. See ECE 434.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "463", "instructor": "Wang, G", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "463", "instructor": "Wang, G", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "473", "instructor": "Erickson, J", "description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "473", "instructor": "Erickson, J", "description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "484", "instructor": "Rauchwerger, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "484", "instructor": "Rauchwerger, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Han, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Han, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Hauser, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Hauser, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Li, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Li, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "526", "instructor": "Misailovic, S", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "543", "instructor": "Gupta, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "543", "instructor": "Gupta, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "546", "instructor": "Hockenmaier, J", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "555", "instructor": "Kloeckner, A", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "563", "instructor": "Bates, A", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "581", "instructor": "Warnow, T", "description": "The purpose of the course is to give each student enough background and training in the area of algorithmic genomic biology so that each will be able to do research in this area, and publish papers. The main focus of the course is phylogeny (evolutionary tree) estimation, multiple sequence alignment, and genome-scale phylogenetics, which are problems that present very interesting challenges from a computational and statistical standpoint. Time permitting, we will also discuss computational problems in microbiome analysis, protein function and structure prediction, genome assembly, and even historical linguistics. Students will learn the mathematical and computational foundations in these areas, read the current literature, and do a team research project. The course is designed for doctoral students in computer science, computer engineering, bioengineering, mathematics, and statistics, and does not depend on any prior background in biology. The technical material will depend on discrete algorithms, graph theory, simulations, and probabilistic analysis of algorithms. 4 graduate hours. No professional credit. Prerequisite: CS 374 and CS 361/STAT 361, or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "586", "instructor": "Chandrasekaran, K", "description": "Same as IE 519. See IE 519.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "591", "instructor": "Amato, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "591", "instructor": "Zilles, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "591", "instructor": "Kalim, F", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "591", "instructor": "Xu, T", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "591", "instructor": "Beckman, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Park, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Solomonik, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Ji, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Tong, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "El-Kebir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Koyejo, O", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Spring 2020", "courseNumber": "598", "instructor": "Adve, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "105", "instructor": "Fowler, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "199", "instructor": "Angrave, L", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "225", "instructor": "Evans, G", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "225", "instructor": "Evans, G", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "225", "instructor": "Evans, G", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "421", "instructor": "Beckman, M", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "513", "instructor": "Ludaescher, B", "description": "Same as IS 532. See IS 532.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Summer 2020", "courseNumber": "598", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "100", "instructor": "Gunter, E", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "105", "instructor": "Zilles, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; One of CS 173, MATH 213, MATH 347, MATH 412 or MATH 413.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "265", "instructor": "Chan, A", "description": "Same as IS 265 and MACS 265. See MACS 265.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "296", "instructor": "Beckman, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: One of CS 173, MATH 213; CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "426", "instructor": "Rauchwerger, L", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "426", "instructor": "Rauchwerger, L", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE 422. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE 422. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "440", "instructor": "Fleck, M", "description": "Major topics in and directions of research in artificial intelligence: basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "440", "instructor": "Fleck, M", "description": "Major topics in and directions of research in artificial intelligence: basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Principles and applications of machine learning. Main paradigms and techniques, including discriminative and generative methods, reinforcement learning: linear regression, logistic regression, support vector machines, deep nets, structured methods, dimensionality reduction, k-means, Gaussian mixtures, expectation maximization, Markov decision processes, and Q-learning. Application areas such as natural language and text understanding, speech recognition, computer vision, data mining, and adaptive computer systems, among others. Same as ECE 449. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; One of MATH 225, MATH 415, MATH 416 or ASRM 406; One of CS 361, ECE 313, MATH 461 or STAT 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Principles and applications of machine learning. Main paradigms and techniques, including discriminative and generative methods, reinforcement learning: linear regression, logistic regression, support vector machines, deep nets, structured methods, dimensionality reduction, k-means, Gaussian mixtures, expectation maximization, Markov decision processes, and Q-learning. Application areas such as natural language and text understanding, speech recognition, computer vision, data mining, and adaptive computer systems, among others. Same as ECE 449. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; One of MATH 225, MATH 415, MATH 416 or ASRM 406; One of CS 361, ECE 313, MATH 461 or STAT 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "466", "instructor": "El-Kebir, M", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "466", "instructor": "El-Kebir, M", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "477", "instructor": "Marinov, D", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "477", "instructor": "Marinov, D", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "491", "instructor": "Beckman, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "523", "instructor": "Xu, T", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "523", "instructor": "Xu, T", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "524", "instructor": "Meseguer, J", "description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "536", "instructor": "Kalbarczyk, Z", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "547", "instructor": "Sirignano, J", "description": "Same as IE 534. See IE 534.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "556", "instructor": "Fischer, P", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "581", "instructor": "Warnow, T", "description": "The purpose of the course is to give each student enough background and training in the area of algorithmic genomic biology so that each will be able to do research in this area, and publish papers. The main focus of the course is phylogeny (evolutionary tree) estimation, multiple sequence alignment, and genome-scale phylogenetics, which are problems that present very interesting challenges from a computational and statistical standpoint. Time permitting, we will also discuss computational problems in microbiome analysis, protein function and structure prediction, genome assembly, and even historical linguistics. Students will learn the mathematical and computational foundations in these areas, read the current literature, and do a team research project. The course is designed for doctoral students in computer science, computer engineering, bioengineering, mathematics, and statistics, and does not depend on any prior background in biology. The technical material will depend on discrete algorithms, graph theory, simulations, and probabilistic analysis of algorithms. 4 graduate hours. No professional credit. Prerequisite: CS 374 and CS 361/STAT 361, or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "584", "instructor": "Mitra, S", "description": "Same as ECE 584. See ECE 584.", "creditHrs": "4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "591", "instructor": "Amato, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "591", "instructor": "Beckman, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "598", "instructor": "Li, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "598", "instructor": "Fletcher, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "598", "instructor": "Telgarsky, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2020", "term": "Fall 2020", "courseNumber": "598", "instructor": "Park, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Winter 2019", "courseNumber": "199", "instructor": "Shaffer, E", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Agarwal, R", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Hou, H", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Kadimisetty, A", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Agarwal, R", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Teng, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Sandur, A", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "102", "instructor": "Cunningham, R", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "126", "instructor": "Evans, G", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "126", "instructor": "Evans, G", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "210", "instructor": "Winter, G", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Kindratenko, V", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "225", "instructor": "Kindratenko, V", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "296", "instructor": "Fagen-Ulmschneider, W", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Chan, T", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "374", "instructor": "Al-Hassanieh, H", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "398", "instructor": "Sirignano, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "398", "instructor": "Ginsburg, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "398", "instructor": "Stodden, V", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Li, Q", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Li, Q", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Sinha, S", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "412", "instructor": "Sinha, S", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "423", "instructor": "Bates, A", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "423", "instructor": "Bates, A", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "429", "instructor": "Marinov, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "433", "instructor": "Fletcher, C", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "433", "instructor": "Fletcher, C", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "440", "instructor": "Hockenmaier, J", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "440", "instructor": "Hockenmaier, J", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "446", "instructor": "Telgarsky, M", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "446", "instructor": "Telgarsky, M", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "446", "instructor": "Schwing, A", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "446", "instructor": "Schwing, A", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "446", "instructor": "Telgarsky, M", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "446", "instructor": "Telgarsky, M", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "450", "instructor": "Kloeckner, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "450", "instructor": "Kloeckner, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "465", "instructor": "Kirlik, A", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "465", "instructor": "Kirlik, A", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "465", "instructor": "Kirlik, A", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "466", "instructor": "Peng, J", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "466", "instructor": "Peng, J", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "468", "instructor": "Su, L", "description": "Same as ADV 492. See ADV 492.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Walker, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Walker, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Bailey, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Bailey, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Walker, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Mitra, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "508", "instructor": "Hwu, W", "description": "Same as ECE 508. See ECE 508.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "513", "instructor": "Ludaescher, B", "description": "Same as IS 532. See IS 532.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "526", "instructor": "Misailovic, S", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "527", "instructor": "Xie, T", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "544", "instructor": "Forsyth, D", "description": "Applications of continuous and discrete optimization to problems in computer vision and machine learning, with particular emphasis on large-scale algorithms and effective approximations: gradient-based learning; Newton's method and variants, applied to structure from motion problems; the augmented Lagrangian method and variants; interior-point methods; SMO and other specialized algorithms for support vector machines; flows and cuts as examples of primal-dual methods; dynamics programming, hidden Markov models, and parsing: 0-1 quadratic forms, max-cut, and Markov random-fields solutions. Prerequisite: CS 450 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "555", "instructor": "Fischer, P", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "565", "instructor": "Kirlik, A", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "579", "instructor": "Forbes, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Zilles, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Mohan, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Kirlik, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Xu, T", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Bashir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Spring 2019", "courseNumber": "598", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "199", "instructor": "Angrave, L", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "199", "instructor": "Katz, D", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "199", "instructor": "Amato, N", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "513", "instructor": "Ludaescher, B", "description": "Same as IS 532. See IS 532.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "598", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Summer 2019", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "100", "instructor": "Gunter, E", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Fagen-Ulmschneider, W", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Zhou, W", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Sheng, P", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Zhou, W", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Ojha, A", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Bazargani, S", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Yigit, H", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Bazargani, S", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Sheng, P", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Yigit, H", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Ojha, A", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "107", "instructor": "Zhang, Z", "description": "Same as IS 107 and STAT 107. See STAT 107.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "126", "instructor": "Woodley, M", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "173", "instructor": "Viswanathan, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "199", "instructor": "Shaffer, E", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "199", "instructor": "Davis, N", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Asplund, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "210", "instructor": "Winter, G", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "225", "instructor": "Beckman, M", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225 and CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "296", "instructor": "Beckman, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "361", "instructor": "Liu, H", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in one of MATH 225, MATH 415 or MATH 416. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "421", "instructor": "Beckman, M", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "427", "instructor": "Xie, T", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "427", "instructor": "Xie, T", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE 422. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE 422. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "440", "instructor": "Fleck, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "440", "instructor": "Fleck, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "450", "instructor": "Shaffer, E", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bates, A", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "466", "instructor": "El-Kebir, M", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "466", "instructor": "El-Kebir, M", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "491", "instructor": "Beckman, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "491", "instructor": "Beckman, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "491", "instructor": "Davis, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Gunter, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Godfrey, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Godfrey, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Jiang, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Jiang, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "498", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "523", "instructor": "Xu, T", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "523", "instructor": "Xu, T", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "536", "instructor": "Kalbarczyk, Z", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "547", "instructor": "Sirignano, J", "description": "Same as IE 534. See IE 534.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "554", "instructor": "Solomonik, E", "description": "Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 457, CS 555.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "576", "instructor": "Meseguer, J", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "584", "instructor": "Mitra, S", "description": "Same as ECE 584. See ECE 584.", "creditHrs": "4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "591", "instructor": "Mohan, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "591", "instructor": "Amato, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Renear, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Kloeckner, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Li, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Fletcher, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Khurana, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Telgarsky, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Park, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Herman, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Herman, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Wang, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Ji, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Mittal, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Peng, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Torrellas, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Torrellas, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Chang, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Nahrstedt, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Ren, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Sha, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Rauchwerger, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Liang, F", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Zhu, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Mehta, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Misailovic, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2019", "term": "Fall 2019", "courseNumber": "598", "instructor": "Chan, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Winter 2018", "courseNumber": "199", "instructor": "Shaffer, E", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Cunningham, R", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Koiliaris, K", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Tsai, P", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Xiao, J", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Khurana, S", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Chen, S", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "102", "instructor": "Cunningham, R", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "126", "instructor": "Evans, G", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "126", "instructor": "Evans, G", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "199", "instructor": "Kumar, R", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "296", "instructor": "Fagen-Ulmschneider, W", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "374", "instructor": "Viswanathan, M", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "398", "instructor": "Brunner, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "398", "instructor": "Stodden, V", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "411", "instructor": "Parameswaran, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "411", "instructor": "Parameswaran, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "411", "instructor": "Huang, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "412", "instructor": "Dev, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "423", "instructor": "Bates, A", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "423", "instructor": "Bates, A", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "428", "instructor": "Dave, M", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "429", "instructor": "Marinov, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "433", "instructor": "Fletcher, C", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "433", "instructor": "Fletcher, C", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "436", "instructor": "Caesar, M", "description": "Same as ECE 435. See ECE 435.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "446", "instructor": "Schwing, A", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "446", "instructor": "Schwing, A", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "446", "instructor": "Schwing, A", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "446", "instructor": "Schwing, A", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "450", "instructor": "Solomonik, E", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "450", "instructor": "Solomonik, E", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "466", "instructor": "Peng, J", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "466", "instructor": "Peng, J", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "468", "instructor": "Yao, M", "description": "Same as ADV 492. See ADV 492.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "473", "instructor": "Mehta, R", "description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Caccamo, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Herman, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Herman, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Snir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Snir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Chen, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Chan, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Chan, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "546", "instructor": "Hockenmaier, J", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "555", "instructor": "Fischer, P", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "565", "instructor": "Kirlik, A", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "572", "instructor": "Kostochka, A", "description": "Same as MATH 581. See MATH 581.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "574", "instructor": "Har-Peled, S", "description": "Basic and advanced concepts in the design and analysis of randomized algorithms. Sampling; concentration inequalities such as Chernoff-Hoeffding bounds; probabilistic method; random walks, dimension reduction; entropy; martingales and Azuma's inequality; derandomization. Randomized algorithms for sorting and searching; graphs; geometric problems. Basics of pseudorandomness and randomized complexity classes. Prerequisite: CS 473; MATH 461 or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "575", "instructor": "Balog, J", "description": "Same as MATH 584. See MATH 584.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "579", "instructor": "Forbes, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "581", "instructor": "Warnow, T", "description": "Same as BIOE 540. See BIOE 540.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "583", "instructor": "Chekuri, C", "description": "Approximation algorithms for NP-hard problems. Basic and advanced techniques in approximation algorithm design: combinatorial algorithms; mathematical programming methods including linear and semi-definite programming, local search methods, and others. Algorithms for graphs and networks, constraint satisfaction, packing and scheduling. Prerequisite: CS 573 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Kirlik, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Olson, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Gupta, I", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Farivar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Parthasarathy, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Borisov, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Spring 2018", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "199", "instructor": "Angrave, L", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "199", "instructor": "Katz, D", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "513", "instructor": "Ludaescher, B", "description": "Same as IS 532. See IS 532.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "598", "instructor": "Gupta, I", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Summer 2018", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "100", "instructor": "Gunter, E", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "125", "instructor": "Challen, G", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "126", "instructor": "Evans, G", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "126", "instructor": "Evans, G", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Varodayan, D", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "196", "instructor": "Warnow, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "296", "instructor": "Beckman, A", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "357", "instructor": "Silva, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "361", "instructor": "Varodayan, D", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "374", "instructor": "Borisov, N", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "411", "instructor": "Alawini, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "412", "instructor": "Li, Q", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "412", "instructor": "Li, Q", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "412", "instructor": "Li, Q", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "420", "instructor": "Snir, M", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "420", "instructor": "Snir, M", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "421", "instructor": "Misailovic, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "421", "instructor": "Misailovic, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "421", "instructor": "Parthasarathy, M", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "421", "instructor": "Parthasarathy, M", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "424", "instructor": "Sha, L", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "424", "instructor": "Sha, L", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "426", "instructor": "Padua, D", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "426", "instructor": "Padua, D", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "427", "instructor": "Xie, T", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "427", "instructor": "Xie, T", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "427", "instructor": "Xie, T", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "427", "instructor": "Xie, T", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "436", "instructor": "Caesar, M", "description": "Same as ECE 435. See ECE 435.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "436", "instructor": "Caesar, M", "description": "Same as ECE 435. See ECE 435.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "436", "instructor": "Caesar, M", "description": "Same as ECE 435. See ECE 435.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "438", "instructor": "Roy Choudhury, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "438", "instructor": "Roy Choudhury, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "440", "instructor": "Fleck, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "440", "instructor": "Fleck, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "450", "instructor": "Solomonik, E", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "450", "instructor": "Solomonik, E", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "466", "instructor": "El-Kebir, M", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "466", "instructor": "El-Kebir, M", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "483", "instructor": "Patel, S", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "483", "instructor": "Patel, S", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "491", "instructor": "Davis, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Gunter, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Godfrey, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Fagen-Ulmschneider, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Lazebnik, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Lazebnik, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Godfrey, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Shaffer, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "498", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "522", "instructor": "Rosu, G", "description": "Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "541", "instructor": "Noureddine, M", "description": "Same as ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "548", "instructor": "Fu, W", "description": "Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. Same as ECE 548. Prerequisite: CS 440 or CS 446.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "548", "instructor": "Fu, W", "description": "Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. Same as ECE 548. Prerequisite: CS 440 or CS 446.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "556", "instructor": "Olson, L", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "563", "instructor": "Bates, A", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "581", "instructor": "Warnow, T", "description": "Same as BIOE 540. See BIOE 540.", "creditHrs": "4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Kirlik, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Olson, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2018", "term": "Fall 2018", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Winter 2017", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "126", "instructor": "Angrave, L", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "126", "instructor": "Angrave, L", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "173", "instructor": "Cunningham, R", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "196", "instructor": "Chapman, W", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "199", "instructor": "Fagen-Ulmschneider, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "199", "instructor": "Brunner, R", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "199", "instructor": "Fagen-Ulmschneider, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "199", "instructor": "Chapman, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "225", "instructor": "Fagen-Ulmschneider, W", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "296", "instructor": "Fagen-Ulmschneider, W", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "361", "instructor": "Sinha, S", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "361", "instructor": "Sinha, S", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "361", "instructor": "Sinha, S", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "361", "instructor": "Sinha, S", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "361", "instructor": "Sinha, S", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "361", "instructor": "Sinha, S", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "374", "instructor": "Chekuri, C", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "411", "instructor": "Parameswaran, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "411", "instructor": "Parameswaran, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "411", "instructor": "Adhikari, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "412", "instructor": "Gui, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "412", "instructor": "Narang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "413", "instructor": "Li, X", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "413", "instructor": "Li, X", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "422", "instructor": "Gunter, E", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "422", "instructor": "Gunter, E", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "423", "instructor": "Bates, A", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "423", "instructor": "Bates, A", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "429", "instructor": "Xie, T", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "465", "instructor": "Dey, S", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "466", "instructor": "Warnow, T", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "466", "instructor": "Warnow, T", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "468", "instructor": "Yao, M", "description": "Same as ADV 492. See ADV 492.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "491", "instructor": "Chapman, W", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "491", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "491", "instructor": "Davis, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "508", "instructor": "Hwu, W", "description": "Same as ECE 508. See ECE 508.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "526", "instructor": "Misailovic, S", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "555", "instructor": "Olson, L", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "576", "instructor": "Meseguer, J", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "579", "instructor": "Kolla, A", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "581", "instructor": "Warnow, T", "description": "Same as BIOE 540. See BIOE 540.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Hudson, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Caccamo, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Rosu, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Lazebnik, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Mehta, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Spring 2017", "courseNumber": "598", "instructor": "Chan, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "199", "instructor": "Angrave, L", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "199", "instructor": "Katz, D", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "412", "instructor": "Jiang, M", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "412", "instructor": "Jiang, M", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "412", "instructor": "Jiang, M", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "498", "instructor": "Deka, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Summer 2017", "courseNumber": "598", "instructor": "Ludaescher, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Haberman, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "105", "instructor": "Harris, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "126", "instructor": "Zilles, C", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "126", "instructor": "Zilles, C", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "196", "instructor": "Challen, G", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "199", "instructor": "Challen, G", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "199", "instructor": "Brunner, R", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "199", "instructor": "Angrave, L", "description": "Topics vary. Approved for Letter and S/U grading. May be repeated.", "creditHrs": "0 TO 5 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "241", "instructor": "Evans, G", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "296", "instructor": "Beckman, A", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "296", "instructor": "Evans, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "357", "instructor": "Carrier, E", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "357", "instructor": "Carrier, E", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "361", "instructor": "Barber, R", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "374", "instructor": "Har-Peled, S", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "398", "instructor": "Stodden, V", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "413", "instructor": "Li, X", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "413", "instructor": "Li, X", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "420", "instructor": "Snir, M", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "420", "instructor": "Snir, M", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "425", "instructor": "Bhatt, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "426", "instructor": "Evans, G", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "426", "instructor": "Evans, G", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "436", "instructor": "Caesar, M", "description": "Same as ECE 435. See ECE 435.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "436", "instructor": "Caesar, M", "description": "Same as ECE 435. See ECE 435.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "438", "instructor": "Al-Hassanieh, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "439", "instructor": "Roy Choudhury, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "439", "instructor": "Roy Choudhury, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "440", "instructor": "Gupta, A", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "446", "instructor": "Koyejo, O", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "468", "instructor": "Yao, M", "description": "Same as ADV 492. See ADV 492.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "491", "instructor": "Beckman, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "491", "instructor": "Davis, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Chan, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Herman, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Herman, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Yershova, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Yershova, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Xie, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Xie, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Xie, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "498", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "510", "instructor": "Zhai, C", "description": "Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval. 4 graduate hours. No professional credit. Prerequisite: One of CS 410, CS 412, CS 446 or LING 406.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "519", "instructor": "Shaffer, E", "description": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "524", "instructor": "Agha, G", "description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "527", "instructor": "Hsieh, C", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "536", "instructor": "Iyer, R", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "544", "instructor": "Forsyth, D", "description": "Applications of continuous and discrete optimization to problems in computer vision and machine learning, with particular emphasis on large-scale algorithms and effective approximations: gradient-based learning; Newton's method and variants, applied to structure from motion problems; the augmented Lagrangian method and variants; interior-point methods; SMO and other specialized algorithms for support vector machines; flows and cuts as examples of primal-dual methods; dynamics programming, hidden Markov models, and parsing: 0-1 quadratic forms, max-cut, and Markov random-fields solutions. Prerequisite: CS 450 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "548", "instructor": "Fu, W", "description": "Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. Same as ECE 548. Prerequisite: CS 440 or CS 446.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "554", "instructor": "Solomonik, E", "description": "Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 457, CS 555.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "584", "instructor": "Mitra, S", "description": "Same as ECE 584. See ECE 584.", "creditHrs": "4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Kirlik, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Olson, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Parameswaran, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Renear, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Kloeckner, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Fletcher, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Park, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "De, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Nahrstedt, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Forbes, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Sha, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2017", "term": "Fall 2017", "courseNumber": "598", "instructor": "Telgarsky, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "102", "instructor": "Padua, D", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "196", "instructor": "Chapman, W", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "199", "instructor": "Fagen, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "199", "instructor": "Chapman, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "357", "instructor": "Heath, M", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "357", "instructor": "Shaffer, E", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "410", "instructor": "Massung, S", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "411", "instructor": "Parameswaran, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "411", "instructor": "Parameswaran, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "411", "instructor": "Adhikari, A", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "412", "instructor": "Sundaram, H", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "413", "instructor": "Escobar Vega, L", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "413", "instructor": "Escobar Vega, L", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "422", "instructor": "Gunter, E", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "422", "instructor": "Gunter, E", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "428", "instructor": "Jiang, Y", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "429", "instructor": "Xie, T", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "438", "instructor": "Du, G", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "450", "instructor": "Kloeckner, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "450", "instructor": "Kloeckner, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "465", "instructor": "Kirlik, A", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "465", "instructor": "Kirlik, A", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "466", "instructor": "Peng, J", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "466", "instructor": "Peng, J", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "468", "instructor": "Clifton, R", "description": "Same as ADV 492. See ADV 492.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "491", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Bailey, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Bailey, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "522", "instructor": "Meseguer, J", "description": "Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "524", "instructor": "Agha, G", "description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "526", "instructor": "Adve, V", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "536", "instructor": "Kalbarczyk, Z", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "538", "instructor": "Nahrstedt, K", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "538", "instructor": "Nahrstedt, K", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "546", "instructor": "Roth, D", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "555", "instructor": "Olson, L", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "579", "instructor": "Kolla, A", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "583", "instructor": "Chekuri, C", "description": "Approximation algorithms for NP-hard problems. Basic and advanced techniques in approximation algorithm design: combinatorial algorithms; mathematical programming methods including linear and semi-definite programming, local search methods, and others. Algorithms for graphs and networks, constraint satisfaction, packing and scheduling. Prerequisite: CS 573 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "584", "instructor": "Mitra, S", "description": "Same as ECE 584. See ECE 584.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Hudson, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Garzaran, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Kumar, N", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Warnow, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Snir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Fischer, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Mehta, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Spring 2016", "courseNumber": "598", "instructor": "Gropp, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Summer 2016", "courseNumber": "421", "instructor": "Beckman, A", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Davis, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "101", "instructor": "Xie, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "105", "instructor": "Hellwig, M", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 112.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 112.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "126", "instructor": "Zilles, C", "description": "Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review. Credit is not given for both CS 242 and CS 126. Prerequisite: CS 125. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "173", "instructor": "Agha, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "196", "instructor": "Chapman, W", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "199", "instructor": "Fagen-Ulmschneider, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "199", "instructor": "Chapman, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "233", "instructor": "Herman, G", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "296", "instructor": "Beckman, A", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "296", "instructor": "Herman, G", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "361", "instructor": "Peng, J", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "361", "instructor": "Peng, J", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "361", "instructor": "Peng, J", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "361", "instructor": "Peng, J", "description": "Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees. Same as STAT 361. Credit is not given for both CS 361 and ECE 313. Prerequisite: MATH 220 or 221; credit or concurrent registration in MATH 225. For majors only.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "374", "instructor": "Erickson, J", "description": "Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness. Same as ECE 374. Prerequisite: CS 225; MATH 225 or MATH 415.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "418", "instructor": "Pietrowicz, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "420", "instructor": "Snir, M", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "420", "instructor": "Snir, M", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "438", "instructor": "Borisov, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "438", "instructor": "Borisov, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "439", "instructor": "Kravets, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "439", "instructor": "Kravets, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "440", "instructor": "Adhikari, A", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "440", "instructor": "Hasegawa-Johnson, M", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "446", "instructor": "Mangipudi, B", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 or 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "491", "instructor": "Chapman, W", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "491", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "491", "instructor": "Angrave, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Bambenek, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "DeJong, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "De, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Stodden, V", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Yershova, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "498", "instructor": "Yershova, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "1 to 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "519", "instructor": "Shaffer, E", "description": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "527", "instructor": "Gyori, G", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "548", "instructor": "Fu, W", "description": "Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. Same as ECE 548. Prerequisite: CS 440 or CS 446.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "556", "instructor": "Olson, L", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "591", "instructor": "Geigle, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Bates, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Miller, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Geigle, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Solomonik, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Torrellas, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Sha, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Kale, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Koyejo, O", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Misailovic, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2016", "term": "Fall 2016", "courseNumber": "598", "instructor": "Telgarsky, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "196", "instructor": "Chapman, W", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "199", "instructor": "Fagen, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "199", "instructor": "Saul, J", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "199", "instructor": "Chapman, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "233", "instructor": "Zilles, C", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "357", "instructor": "Shaffer, E", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "413", "instructor": "Reznick, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "413", "instructor": "Reznick, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "421", "instructor": "Agha, G", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "421", "instructor": "Agha, G", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "428", "instructor": "Xie, T", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "429", "instructor": "Xie, T", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "433", "instructor": "Garzaran, M", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "433", "instructor": "Garzaran, M", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "433", "instructor": "Garzaran, M", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "446", "instructor": "Hockenmaier, J", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "446", "instructor": "Hockenmaier, J", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "446", "instructor": "Hockenmaier, J", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "484", "instructor": "Kale, L", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Woodley, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Woodley, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "498", "instructor": "Clifton, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "511", "instructor": "Parameswaran, A", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "511", "instructor": "Parameswaran, A", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "519", "instructor": "Shaffer, E", "description": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "526", "instructor": "Padua, D", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "536", "instructor": "Iyer, R", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "548", "instructor": "Fu, W", "description": "Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. Same as ECE 548. Prerequisite: CS 440 or CS 446.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "555", "instructor": "Olson, L", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "579", "instructor": "Viswanathan, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "591", "instructor": "Hudson, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "591", "instructor": "Chang, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Blum, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Warnow, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Sha, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Kolla, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Spring 2015", "courseNumber": "598", "instructor": "Gropp, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "233", "instructor": "Meenai, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "233", "instructor": "Meenai, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "421", "instructor": "Kalyanaraman, K", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Summer 2015", "courseNumber": "528", "instructor": "Geigle, C", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "101", "instructor": "Cunningham, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "196", "instructor": "Chapman, W", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "199", "instructor": "Fagen, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "199", "instructor": "Chapman, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Beckman, A", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "233", "instructor": "Adve, S", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "357", "instructor": "Olson, L", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "420", "instructor": "Kale, L", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "420", "instructor": "Kale, L", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "425", "instructor": "Du, G", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "427", "instructor": "Cheng, Q", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "438", "instructor": "Roy Choudhury, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "438", "instructor": "Roy Choudhury, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "439", "instructor": "Kravets, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "439", "instructor": "Kravets, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "440", "instructor": "Girlea, C", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "445", "instructor": "Hoiem, D", "description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "446", "instructor": "Khashabi, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "450", "instructor": "Fischer, P", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "461", "instructor": "Bailey, M", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "477", "instructor": "Agha, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "477", "instructor": "Agha, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "481", "instructor": "Sowers, R", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "481", "instructor": "Sowers, R", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "491", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Bashir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "DeJong, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Stodden, V", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Woodley, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Yershova, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "498", "instructor": "Yershova, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "519", "instructor": "Shaffer, E", "description": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "527", "instructor": "Gu, M", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "527", "instructor": "Xie, T", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "541", "instructor": "Sanders, W", "description": "Same as ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "554", "instructor": "Heath, M", "description": "Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 457, CS 555.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "572", "instructor": "Kostochka, A", "description": "Same as MATH 581. See MATH 581.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "574", "instructor": "Kolla, A", "description": "Basic and advanced concepts in the design and analysis of randomized algorithms. Sampling; concentration inequalities such as Chernoff-Hoeffding bounds; probabilistic method; random walks, dimension reduction; entropy; martingales and Azuma's inequality; derandomization. Randomized algorithms for sorting and searching; graphs; geometric problems. Basics of pseudorandomness and randomized complexity classes. Prerequisite: CS 473; MATH 461 or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "575", "instructor": "Balog, J", "description": "Same as MATH 584. See MATH 584.", "creditHrs": "4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Peng, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Rutenbar, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "591", "instructor": "Prabhakaran, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Parameswaran, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Kloeckner, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Peng, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Parthasarathy, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Kim, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2015", "term": "Fall 2015", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "103", "instructor": "Cunningham, R", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "103", "instructor": "Cunningham, R", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "103", "instructor": "Cunningham, R", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "199", "instructor": "Forsyth, D", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "210", "instructor": "Kirlik, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "296", "instructor": "Caccamo, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "357", "instructor": "Semeraro, B", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "357", "instructor": "Semeraro, B", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Meseguer, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Meseguer, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Meseguer, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Meseguer, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Meseguer, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Meseguer, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "373", "instructor": "Kannan, K", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "398", "instructor": "Heeren, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "411", "instructor": "Cunningham, R", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "411", "instructor": "Cunningham, R", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "421", "instructor": "Rosu, G", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "421", "instructor": "Rosu, G", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "429", "instructor": "Marinov, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "438", "instructor": "Caesar, M", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "438", "instructor": "Caesar, M", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "438", "instructor": "Caesar, M", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "450", "instructor": "Kloeckner, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "450", "instructor": "Kloeckner, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "484", "instructor": "Padua, D", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "484", "instructor": "Padua, D", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "484", "instructor": "Padua, D", "description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "498", "instructor": "Parthasarathy, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "498", "instructor": "Woodley, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "498", "instructor": "Clifton, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "526", "instructor": "Adve, V", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "536", "instructor": "Iyer, R", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "544", "instructor": "Forsyth, D", "description": "Applications of continuous and discrete optimization to problems in computer vision and machine learning, with particular emphasis on large-scale algorithms and effective approximations: gradient-based learning; Newton's method and variants, applied to structure from motion problems; the augmented Lagrangian method and variants; interior-point methods; SMO and other specialized algorithms for support vector machines; flows and cuts as examples of primal-dual methods; dynamics programming, hidden Markov models, and parsing: 0-1 quadratic forms, max-cut, and Markov random-fields solutions. Prerequisite: CS 450 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "546", "instructor": "Hockenmaier, J", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "555", "instructor": "Olson, L", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "574", "instructor": "Har-Peled, S", "description": "Basic and advanced concepts in the design and analysis of randomized algorithms. Sampling; concentration inequalities such as Chernoff-Hoeffding bounds; probabilistic method; random walks, dimension reduction; entropy; martingales and Azuma's inequality; derandomization. Randomized algorithms for sorting and searching; graphs; geometric problems. Basics of pseudorandomness and randomized complexity classes. Prerequisite: CS 473; MATH 461 or STAT 400.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "579", "instructor": "Viswanathan, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Hudson, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Bobba, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Chang, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "591", "instructor": "Har-Peled, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "598", "instructor": "Mechitov, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "598", "instructor": "Adve, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Spring 2014", "courseNumber": "598", "instructor": "Xie, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "173", "instructor": "Wang, Y", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "173", "instructor": "Wang, Y", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "225", "instructor": "Geigle, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "241", "instructor": "Chen, Z", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "241", "instructor": "Chen, Z", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "241", "instructor": "Chen, Z", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "357", "instructor": "Gambill, T", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "410", "instructor": "Massung, S", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "410", "instructor": "Massung, S", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "410", "instructor": "Massung, S", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "421", "instructor": "Mechitov, K", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "421", "instructor": "Mechitov, K", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "421", "instructor": "Mechitov, K", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "425", "instructor": "Mechitov, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "425", "instructor": "Mechitov, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "425", "instructor": "Mechitov, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "438", "instructor": "Douglas, F", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "438", "instructor": "Douglas, F", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "528", "instructor": "Geigle, C", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Summer 2014", "courseNumber": "528", "instructor": "Geigle, C", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "102", "instructor": "Tal, G", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "102", "instructor": "Tal, G", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "102", "instructor": "Tal, G", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "102", "instructor": "Tal, G", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "105", "instructor": "Fagen, W", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "125", "instructor": "Chapman, W", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "196", "instructor": "Chapman, W", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "196", "instructor": "Viswanathan, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Chapman, W", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "210", "instructor": "Cunningham, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225. Junior standing required.", "creditHrs": "2 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "233", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. Prerequisite: CS 125 and CS 173; credit or concurrent enrollment in CS 225.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "241", "instructor": "Angrave, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 233.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "296", "instructor": "Angrave, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "357", "instructor": "Kloeckner, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "412", "instructor": "Chang, K", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "418", "instructor": "Shaffer, E", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "419", "instructor": "Shaffer, E", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "420", "instructor": "Jain, N", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "420", "instructor": "Jain, N", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "426", "instructor": "Padua, D", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "426", "instructor": "Padua, D", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "427", "instructor": "Rosu, G", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "438", "instructor": "Roy Choudhury, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "438", "instructor": "Roy Choudhury, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "447", "instructor": "Hockenmaier, J", "description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "461", "instructor": "Cunningham, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "473", "instructor": "Kolla, A", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "483", "instructor": "Lumetta, S", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "483", "instructor": "Lumetta, S", "description": "Same as CSE 408 and ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. Prerequisite: For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Bashir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "498", "instructor": "Woodley, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "524", "instructor": "Agha, G", "description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "538", "instructor": "Nahrstedt, K", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "538", "instructor": "Nahrstedt, K", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "541", "instructor": "Sanders, W", "description": "Same as ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "556", "instructor": "Olson, L", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "584", "instructor": "Mitra, S", "description": "Same as ECE 584. See ECE 584.", "creditHrs": "4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Sinha, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Cunningham, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Fawaz, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "591", "instructor": "Prabhakaran, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Parameswaran, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Caccamo, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Sundaram, H", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Acun, B", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Blum, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2014", "term": "Fall 2014", "courseNumber": "598", "instructor": "Kumar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "103", "instructor": "Kale, L", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "103", "instructor": "Kale, L", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "103", "instructor": "Kale, L", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "105", "instructor": "Zhao, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "199", "instructor": "Woodley, M", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "210", "instructor": "Miller, K", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "296", "instructor": "Caccamo, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "357", "instructor": "Shaffer, E", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "398", "instructor": "Zilles, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "411", "instructor": "Cunningham, R", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "411", "instructor": "Cunningham, R", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "411", "instructor": "Cunningham, R", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "428", "instructor": "Dig, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "428", "instructor": "Dig, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "428", "instructor": "Dig, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "429", "instructor": "Dig, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "440", "instructor": "DeJong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "450", "instructor": "Hirani, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "450", "instructor": "Hirani, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "460", "instructor": "Bambenek, J", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "477", "instructor": "Gunter, E", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "482", "instructor": "King, D", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "King, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "King, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "498", "instructor": "Clifton, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "522", "instructor": "Rosu, G", "description": "Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "524", "instructor": "Agha, G", "description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "526", "instructor": "Adve, V", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "528", "instructor": "Johnson, R", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "528", "instructor": "Johnson, R", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "543", "instructor": "Lazebnik, S", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "546", "instructor": "Roth, D", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "555", "instructor": "Olson, L", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510 and MATH 552. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "572", "instructor": "Kostochka, A", "description": "Same as MATH 581. See MATH 581.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "575", "instructor": "Balog, J", "description": "Same as MATH 584. See MATH 584.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "576", "instructor": "Meseguer, J", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Parthasarathy, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Dig, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "591", "instructor": "Har-Peled, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Spring 2013", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "173", "instructor": "Evans, G", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "225", "instructor": "Massung, S", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "225", "instructor": "Massung, S", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "225", "instructor": "Massung, S", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "357", "instructor": "Gambill, T", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "373", "instructor": "Di Febo, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "373", "instructor": "Di Febo, J", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "421", "instructor": "Mansky, W", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "421", "instructor": "Mansky, W", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "421", "instructor": "Mansky, W", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "425", "instructor": "Mechitov, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "425", "instructor": "Mechitov, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "425", "instructor": "Mechitov, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "528", "instructor": "Zilles, C", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Summer 2013", "courseNumber": "528", "instructor": "Zilles, C", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "102", "instructor": "Braroo, S", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "102", "instructor": "Braroo, S", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "102", "instructor": "Braroo, S", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "103", "instructor": "Bailey, B", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "103", "instructor": "Bailey, B", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "103", "instructor": "Bailey, B", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "105", "instructor": "Tal, G", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "125", "instructor": "Zilles, C", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "199", "instructor": "Zilles, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "210", "instructor": "Kirlik, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "210", "instructor": "Kirlik, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "210", "instructor": "Kirlik, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "210", "instructor": "Kirlik, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "296", "instructor": "Fagen, W", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "357", "instructor": "Semeraro, B", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "420", "instructor": "Kale, L", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "420", "instructor": "Kale, L", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "438", "instructor": "Vaidya, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "438", "instructor": "Vaidya, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "439", "instructor": "Kravets, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "439", "instructor": "Kravets, R", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "446", "instructor": "Hockenmaier, J", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "446", "instructor": "Hockenmaier, J", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "446", "instructor": "Hockenmaier, J", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "461", "instructor": "Bobba, R", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "465", "instructor": "Fu, W", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "481", "instructor": "Kiyavash, N", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "481", "instructor": "Kiyavash, N", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "483", "instructor": "Hwu, W", "description": "Same as ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "483", "instructor": "Patel, S", "description": "Same as ECE 408. See ECE 408.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "527", "instructor": "Xie, T", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "527", "instructor": "Xie, T", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "554", "instructor": "Heath, M", "description": "Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 457, CS 555.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "571", "instructor": "Yong, A", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "583", "instructor": "Chekuri, C", "description": "Approximation algorithms for NP-hard problems. Basic and advanced techniques in approximation algorithm design: combinatorial algorithms; mathematical programming methods including linear and semi-definite programming, local search methods, and others. Algorithms for graphs and networks, constraint satisfaction, packing and scheduling. Prerequisite: CS 573 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Sinha, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Bobba, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Gunter, E", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Marinov, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Fawaz, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "591", "instructor": "Har-Peled, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "598", "instructor": "Kloeckner, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "598", "instructor": "Kale, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2013", "term": "Fall 2013", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Duque, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Duque, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Ellison, D", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Ellison, D", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Sapre, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Henry, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Kharbanda, H", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Shah, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Dixit, K", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Krishnamurthy, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Adeniba, O", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Adeniba, O", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Chauhan, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Kazemian, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "105", "instructor": "Gupta, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "199", "instructor": "Zilles, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "210", "instructor": "Loui, M", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "210", "instructor": "Loui, M", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "210", "instructor": "Loui, M", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "210", "instructor": "Loui, M", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "242", "instructor": "Meyer, C", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "296", "instructor": "Godfrey, P", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "357", "instructor": "Gambill, T", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "411", "instructor": "Yershova, G", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "411", "instructor": "Yershova, G", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "413", "instructor": "Lidicky, B", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "425", "instructor": "Mitra, S", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "425", "instructor": "Mitra, S", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "428", "instructor": "Dig, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "428", "instructor": "Dig, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "428", "instructor": "Dig, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "429", "instructor": "Dig, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "439", "instructor": "Polychronopoulos, C", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "439", "instructor": "Polychronopoulos, C", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "440", "instructor": "Amir, E", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "440", "instructor": "Amir, E", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "461", "instructor": "Borisov, N", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "461", "instructor": "Borisov, N", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "463", "instructor": "Rowe, K", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "463", "instructor": "Rowe, K", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "463", "instructor": "Rowe, K", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "467", "instructor": "Karahalios, K", "description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "477", "instructor": "Agha, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "477", "instructor": "Agha, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "477", "instructor": "Agha, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "493", "instructor": "DeJong, G", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "494", "instructor": "DeJong, G", "description": "Continuation of CS 492. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Padua, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "522", "instructor": "Rosu, G", "description": "Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "526", "instructor": "Adve, V", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "544", "instructor": "Forsyth, D", "description": "Applications of continuous and discrete optimization to problems in computer vision and machine learning, with particular emphasis on large-scale algorithms and effective approximations: gradient-based learning; Newton's method and variants, applied to structure from motion problems; the augmented Lagrangian method and variants; interior-point methods; SMO and other specialized algorithms for support vector machines; flows and cuts as examples of primal-dual methods; dynamics programming, hidden Markov models, and parsing: 0-1 quadratic forms, max-cut, and Markov random-fields solutions. Prerequisite: CS 450 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "546", "instructor": "Roth, D", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "555", "instructor": "Hirani, A", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510 and MATH 552. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Parthasarathy, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Hockenmaier, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Dig, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "598", "instructor": "Kolla, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "598", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "598", "instructor": "Caccamo, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "598", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Spring 2012", "courseNumber": "598", "instructor": "Campbell, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "173", "instructor": "Pittman, L", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "173", "instructor": "Pittman, L", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "225", "instructor": "Toole, J", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "225", "instructor": "Toole, J", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "225", "instructor": "Toole, J", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "296", "instructor": "Toole, J", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "373", "instructor": "Cunningham, R", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "373", "instructor": "Cunningham, R", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "411", "instructor": "Weninger, T", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "411", "instructor": "Weninger, T", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "411", "instructor": "Weninger, T", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "411", "instructor": "Weninger, T", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "421", "instructor": "Griffith, D", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "421", "instructor": "Griffith, D", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "421", "instructor": "Griffith, D", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "421", "instructor": "Griffith, D", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "425", "instructor": "Montanari, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "425", "instructor": "Montanari, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "425", "instructor": "Montanari, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "425", "instructor": "Montanari, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Summer 2012", "courseNumber": "528", "instructor": "Johnson, R", "description": "Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications. Prerequisite: CS 427.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Kale, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Hanson, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Hanson, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Hanson, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Henry, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Henry, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Kharbanda, H", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Kharbanda, H", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Kharbanda, H", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Kale, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Stanley, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "105", "instructor": "Henry, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "210", "instructor": "Roy, S", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "210", "instructor": "Roy, S", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "210", "instructor": "Roy, S", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "210", "instructor": "Roy, S", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "241", "instructor": "Kravets, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "296", "instructor": "Kravets, R", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "357", "instructor": "Hirani, A", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "373", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "398", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "424", "instructor": "Sha, L", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "424", "instructor": "Sha, L", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "427", "instructor": "Brindescu, C", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "438", "instructor": "Vaidya, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "438", "instructor": "Vaidya, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "440", "instructor": "Lazebnik, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "446", "instructor": "Brindescu, C", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "450", "instructor": "Heath, M", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "473", "instructor": "Erickson, J", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "481", "instructor": "Kiyavash, N", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "481", "instructor": "Kiyavash, N", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing.", "creditHrs": "3 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Dig, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "556", "instructor": "Olson, L", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "571", "instructor": "Balog, J", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "579", "instructor": "Kolla, A", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579 and MATH 578. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "584", "instructor": "Mitra, S", "description": "Same as ECE 584. See ECE 584.", "creditHrs": "4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Viswanathan, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Dig, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Fawaz, A", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "591", "instructor": "Har-Peled, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Twidale, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Berlin, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Nahrstedt, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Kale, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2012", "term": "Fall 2012", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Ellison, D", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Ellison, D", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Date, C", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Adeniba, O", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Adeniba, O", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Chauhan, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "105", "instructor": "Kumar, V", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "210", "instructor": "Carlson, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "210", "instructor": "Carlson, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "231", "instructor": "Kale, L", "description": "Fundamentals of computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic-logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "241", "instructor": "Adve, V", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "296", "instructor": "Kale, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "296", "instructor": "Kumar, V", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "296", "instructor": "Adve, V", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "357", "instructor": "Arizumi, N", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS 357 or MATH 357. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "410", "instructor": "Zhai, C", "description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "413", "instructor": "Furedi, Z", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "413", "instructor": "Furedi, Z", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "417", "instructor": "Tettegah, S", "description": "Same as CI 435. See CI 435.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "423", "instructor": "Gunter, E", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "423", "instructor": "Gunter, E", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "425", "instructor": "Vaidya, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "429", "instructor": "Johnson, R", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 427 and CS 429. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "438", "instructor": "Godfrey, P", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "438", "instructor": "Godfrey, P", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "438", "instructor": "Godfrey, P", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "439", "instructor": "Polychronopoulos, C", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "439", "instructor": "Polychronopoulos, C", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "440", "instructor": "Hockenmaier, J", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "440", "instructor": "Hockenmaier, J", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "450", "instructor": "Olson, L", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "457", "instructor": "Gropp, W", "description": "Continuation of CS 357. Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations. No graduate credit. Credit is not given for both CS 457 and CS 450. Prerequisite: CS 357.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "477", "instructor": "Mont, A", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Garnett, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Gunderson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Gunderson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Cappello, F", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Cappello, F", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "498", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "519", "instructor": "Angrave, L", "description": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "522", "instructor": "Rosu, G", "description": "Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "524", "instructor": "Agha, G", "description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "526", "instructor": "Padua, D", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Same as CSE 526. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522 and ECE 533. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "543", "instructor": "Hoiem, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "546", "instructor": "Roth, D", "description": "Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "548", "instructor": "Dejong, G", "description": "Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; survey of the state-of-the-art in artificial intelligence. Same as ECE 548. Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "555", "instructor": "Hirani, A", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510 and MATH 552. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "576", "instructor": "Meseguer, J", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "579", "instructor": "Prabhakaran, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579 and MATH 578. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Snir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Parthasarathy, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Hockenmaier, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Godfrey, P", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Dig, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "598", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "598", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "598", "instructor": "Sha, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "598", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Spring 2011", "courseNumber": "598", "instructor": "Johnson, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "231", "instructor": "Simmons, P", "description": "Fundamentals of computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic-logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "296", "instructor": "Earls, J", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "296", "instructor": "Simmons, P", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "373", "instructor": "Cook, L", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "373", "instructor": "Cook, L", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "421", "instructor": "Zamani Nasab, R", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "421", "instructor": "Zamani Nasab, R", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "421", "instructor": "Zamani Nasab, R", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Summer 2011", "courseNumber": "598", "instructor": "Johnson, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Chauhan, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Agarwal, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Agarwal, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Agrawal, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Agrawal, S", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Gambill, T", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "105", "instructor": "Das, A", "description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 101, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "196", "instructor": "Viswanathan, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "199", "instructor": "Hirani, A", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "210", "instructor": "Chopra, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "210", "instructor": "Chopra, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "210", "instructor": "Chopra, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "210", "instructor": "Chopra, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "231", "instructor": "Garzaran, M", "description": "Fundamentals of computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic-logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input-output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "241", "instructor": "Caesar, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "242", "instructor": "Kamin, S", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "242", "instructor": "Kamin, S", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "296", "instructor": "Garzaran, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "296", "instructor": "Kravets, R", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "357", "instructor": "Yershova, G", "description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "412", "instructor": "Han, J", "description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "420", "instructor": "Padua, D", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "424", "instructor": "Sha, L", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "424", "instructor": "Sha, L", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "425", "instructor": "Borisov, N", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "427", "instructor": "Dig, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "427", "instructor": "Dig, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "427", "instructor": "Dig, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "438", "instructor": "Polychronopoulos, C", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "438", "instructor": "Polychronopoulos, C", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "443", "instructor": "Win, S", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "443", "instructor": "Win, S", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "450", "instructor": "Hirani, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "450", "instructor": "Hirani, A", "description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "462", "instructor": "Vasudevan, S", "description": "Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. ", "creditHrs": "3 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Amir, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Amir, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Fu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Berlin, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Berlin, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "505", "instructor": "Jewett, B", "description": "Same as ATMS 502 and CSE 566. See ATMS 502.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in database management system design and implementation, and major recent developments in the field. Relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in database management system design and implementation, and major recent developments in the field. Relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "536", "instructor": "Kalbarczyk, Z", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "538", "instructor": "Godfrey, P", "description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. Prerequisite: CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "554", "instructor": "Heath, M", "description": "Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 457, CS 555.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "571", "instructor": "Yong, A", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "573", "instructor": "Chekuri, C", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "573", "instructor": "Chekuri, C", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "577", "instructor": "Blahut, R", "description": "Same as ECE 556 and MATH 579. See ECE 556.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "578", "instructor": "Milenkovic, O", "description": "Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Parthasarathy, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Rosu, G", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Hockenmaier, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Dig, D", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Kirlik, A", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Vaidya, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Rutenbar, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2011", "term": "Fall 2011", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Bhasin, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "101", "instructor": "Bhasin, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "103", "instructor": "Shaffer, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Charalambides, M", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Charalambides, M", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Date, C", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Bhagath, A", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Chen, Y", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Chen, Y", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "105", "instructor": "Date, C", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fanek, S", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fanek, S", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Cook, L", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Cook, L", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "210", "instructor": "Loui, M", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "210", "instructor": "Loui, M", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "231", "instructor": "Kale, L", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "232", "instructor": "Cunningham, R", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "232", "instructor": "Guzman Rivera, A", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "232", "instructor": "Aggarwal, A", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Chen, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Ashraf, F", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Ashraf, F", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Fagen, W", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Crepaldi, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Crepaldi, R", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Chen, L", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "241", "instructor": "Godfrey, P", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "242", "instructor": "Kale, V", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "242", "instructor": "Rabb, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "296", "instructor": "Kale, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "296", "instructor": "Kumar, V", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "357", "instructor": "Gropp, W", "description": "Introduction to numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS 357 or MATH 357. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "373", "instructor": "Parthasarathy, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "411", "instructor": "Chang, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "417", "instructor": "Tettegah, S", "description": "Same as CI 435. See CI 435.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "418", "instructor": "Kamali Moghaddam, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "418", "instructor": "Kamali Moghaddam, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "421", "instructor": "Kamin, S", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "425", "instructor": "Nagaraja, S", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "428", "instructor": "Marinov, D", "description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "429", "instructor": "Marinov, D", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 427 and CS 429. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "431", "instructor": "Young, J", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "431", "instructor": "Young, J", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "431", "instructor": "Young, J", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "438", "instructor": "Caesar, M", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "439", "instructor": "Vaidya, N", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "439", "instructor": "Vaidya, N", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "440", "instructor": "Amir, E", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "440", "instructor": "Amir, E", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "457", "instructor": "Olson, L", "description": "Continuation of CS 357. Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations. No graduate credit. Credit is not given for both CS 457 and CS 450. Prerequisite: CS 357.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "461", "instructor": "Nicol, D", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "461", "instructor": "Nicol, D", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "473", "instructor": "Agarwal, R", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "473", "instructor": "Agarwal, R", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "473", "instructor": "Agarwal, R", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "473", "instructor": "Agarwal, R", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "473", "instructor": "Erickson, J", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "477", "instructor": "Meseguer, J", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "477", "instructor": "Meseguer, J", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Patel, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Patel, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Garnett, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "524", "instructor": "Agha, G", "description": "Introduction to the theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "526", "instructor": "Adve, V", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Same as CSE 526. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522 and ECE 533. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "543", "instructor": "Forsyth, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "548", "instructor": "Dejong, G", "description": "Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; survey of the state-of-the-art in artificial intelligence. Same as ECE 548. Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "554", "instructor": "Heath, M", "description": "Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 457, CS 555.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "555", "instructor": "Hirani, A", "description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. Same as CSE 510 and MATH 552. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "579", "instructor": "Prabhakaran, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579 and MATH 578. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Gunter, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Parthasarathy, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Godfrey, P", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Sha, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Johnson, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Spring 2010", "courseNumber": "598", "instructor": "Yu, Y", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "373", "instructor": "Kumar, V", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "373", "instructor": "Kumar, V", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "591", "instructor": "Harandi, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Summer 2010", "courseNumber": "598", "instructor": "Johnson, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "102", "instructor": "Pitt, L", "description": "Same as INFO 102. See INFO 102.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "103", "instructor": "Hailpern, J", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "103", "instructor": "Volkman, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "103", "instructor": "Volkman, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Ananth, K", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Date, C", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Ananth, K", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Chen, Y", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Chen, Y", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.  Prerequisite: One of CS 101, CS 105, CS 125, ECE 190, INFO 103; one of MATH 220, MATH 221, MATH 234. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "196", "instructor": "Kumar, V", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "210", "instructor": "Bergstrom, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "210", "instructor": "Bergstrom, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "210", "instructor": "Bergstrom, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "210", "instructor": "Bergstrom, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "231", "instructor": "Garzaran, M", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "242", "instructor": "Meyer, C", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "296", "instructor": "Garzaran, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "296", "instructor": "Kumar, V", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "357", "instructor": "Hirani, A", "description": "Introduction to numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS 357 or MATH 357. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "373", "instructor": "Agha, G", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "411", "instructor": "Sinha, S", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "413", "instructor": "Balog, J", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "413", "instructor": "Balog, J", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "418", "instructor": "Hart, J", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "420", "instructor": "Ghike, S", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "420", "instructor": "Ghike, S", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "422", "instructor": "Rosu, G", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "425", "instructor": "Gupta, I", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "438", "instructor": "Lumetta, S", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "443", "instructor": "Bonnie, D", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "443", "instructor": "Lee, S", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "443", "instructor": "Rojas Arciniegas, A", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "443", "instructor": "Hutchinson, S", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "450", "instructor": "Heath, M", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "450", "instructor": "Heath, M", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "462", "instructor": "Vasudevan, S", "description": "Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. ", "creditHrs": "3 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Gropp, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Snir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Snir, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "498", "instructor": "Kamin, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "505", "instructor": "Jewett, B", "description": "Same as ATMS 502 and CSE 566. See ATMS 502.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in database management system design and implementation, and major recent developments in the field. Relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in database management system design and implementation, and major recent developments in the field. Relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "527", "instructor": "Badame, S", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Same as CSE 529. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Same as CSE 529. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "556", "instructor": "Olson, L", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "571", "instructor": "West, D", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "573", "instructor": "Erickson, J", "description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. Same as CSE 515. Prerequisite: CS 373.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "578", "instructor": "Veeravalli, V", "description": "Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Zhai, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Berlin, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Kale, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Parthasarathy, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Vaidya, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Godfrey, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Smaragdis, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Har-Peled, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Lavalle, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2010", "term": "Fall 2010", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Bhagath, A", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Bhagath, A", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Fuladi, L", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Fuladi, L", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Cook, L", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Earls, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "231", "instructor": "Garzaran, M", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "232", "instructor": "Guzman Rivera, A", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "232", "instructor": "Guzman Rivera, A", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "232", "instructor": "Jones, B", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "232", "instructor": "Fanek, S", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "296", "instructor": "Garzaran, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "357", "instructor": "Gropp, W", "description": "Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines. Same as MATH 357. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS 357 or MATH 357. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 243.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "373", "instructor": "Har-Peled, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "373", "instructor": "Har-Peled, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "373", "instructor": "Har-Peled, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "373", "instructor": "Har-Peled, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "373", "instructor": "Har-Peled, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "373", "instructor": "Har-Peled, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "411", "instructor": "Chang, K", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "411", "instructor": "Chang, K", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "413", "instructor": "Balog, J", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "413", "instructor": "Balog, J", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "417", "instructor": "Tettegah, S", "description": "Same as CI 435. See CI 435.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "418", "instructor": "Feng, W", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "418", "instructor": "Feng, W", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "420", "instructor": "Kale, L", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "420", "instructor": "Kale, L", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "422", "instructor": "Gunter, E", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "422", "instructor": "Gunter, E", "description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "425", "instructor": "Mitra, S", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "429", "instructor": "Johnson, R", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 427 and CS 429. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "431", "instructor": "AlMalkawi, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "431", "instructor": "AlMalkawi, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "435", "instructor": "Chen, D", "description": "Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "435", "instructor": "Chen, D", "description": "Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "438", "instructor": "Caesar, M", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "439", "instructor": "Vaidya, N", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "439", "instructor": "Vaidya, N", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "440", "instructor": "Levinson, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "440", "instructor": "Levinson, S", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "450", "instructor": "Hirani, A", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "450", "instructor": "Hirani, A", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "457", "instructor": "Heath, M", "description": "Continuation of CS 357. Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 457 and CS 450. Prerequisite: CS 357.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "460", "instructor": "Hinrichs, S", "description": "Operating systems security: access control, least privilege mechancsm and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "461", "instructor": "Nicol, D", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "461", "instructor": "Nicol, D", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "462", "instructor": "Vasudevan, S", "description": "Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "463", "instructor": "Gunter, C", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "473", "instructor": "Ene, A", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "473", "instructor": "Ene, A", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "473", "instructor": "Ene, A", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "473", "instructor": "Ene, A", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "473", "instructor": "Erickson, J", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "475", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "475", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "477", "instructor": "Viswanathan, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "477", "instructor": "Viswanathan, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "482", "instructor": "Jacobson, S", "description": "Same as IE 413. See IE 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "493", "instructor": "Woodley, M", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "494", "instructor": "Woodley, M", "description": "Continuation of CS 492. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. 3 undergraduate hours. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Hwu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Hwu, W", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Marinov, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Garnett, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "512", "instructor": "Han, J", "description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "519", "instructor": "Hart, J", "description": "A detailed study of visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "524", "instructor": "Agha, G", "description": "Introduction to the theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental/theoretical distributed computing. Reviews classical work in each, and uses design methodologies to explore overlaps across the three otherwise scattered research areas. Studies revolve around protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary, which are updated every year. Students learn to write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "526", "instructor": "Padua, D", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Same as CSE 526. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522 and ECE 533. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "543", "instructor": "Forsyth, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "546", "instructor": "Roth, D", "description": "Introduction to the central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Presents the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within these and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "548", "instructor": "Dejong, G", "description": "Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; survey of the state-of-the-art in artificial intelligence. Same as ECE 548. Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "555", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations. Examines finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 510 and MATH 552. Prerequisite: CS 450 or CS 457.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "556", "instructor": "Olson, L", "description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "572", "instructor": "West, D", "description": "Same as MATH 581. See MATH 581.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "576", "instructor": "Meseguer, J", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. May be repeated in separate terms. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "579", "instructor": "Prabhakaran, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579 and MATH 578. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Schatz, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Hockenmaier, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "598", "instructor": "Chekuri, C", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "598", "instructor": "Hoiem, D", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "598", "instructor": "Amir, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "598", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "598", "instructor": "Johnson, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Spring 2009", "courseNumber": "598", "instructor": "Sinha, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "225", "instructor": "Shirazi, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "225", "instructor": "Shirazi, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "225", "instructor": "Shirazi, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "231", "instructor": "Bhatele, A", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "296", "instructor": "Shirazi, A", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "296", "instructor": "Bhatele, A", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "373", "instructor": "Kumar, V", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "373", "instructor": "Kumar, V", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "421", "instructor": "Mechitov, K", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "421", "instructor": "Mechitov, K", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Summer 2009", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Aggarwal, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Cherukuri, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Cherukuri, N", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Aggarwal, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Bhasin, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "101", "instructor": "Bhasin, R", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "103", "instructor": "Hailpern, J", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "103", "instructor": "Volkman, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "103", "instructor": "Volkman, E", "description": "Same as INFO 103. See INFO 103.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Danilevsky, M", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Danilevsky, M", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Charalambides, M", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Charalambides, M", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "125", "instructor": "Angrave, L", "description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Cook, L", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Cook, L", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "173", "instructor": "Fleck, M", "description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "199", "instructor": "Angrave, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "210", "instructor": "Schlosberg, C", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Hazra, K", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Hazra, K", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Guo, R", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Guo, R", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "231", "instructor": "Garzaran, M", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "232", "instructor": "Cunningham, R", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "232", "instructor": "Guzman Rivera, A", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Ashraf, F", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Ashraf, F", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "241", "instructor": "Caccamo, M", "description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "242", "instructor": "Ellison, C", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "296", "instructor": "Garzaran, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "296", "instructor": "Kumar, V", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "357", "instructor": "Olson, L", "description": "Introduction to numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS 357 or MATH 357. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "373", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "411", "instructor": "Minami, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "411", "instructor": "Minami, K", "description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "413", "instructor": "Yong, A", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "418", "instructor": "Kamali Moghaddam, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "418", "instructor": "Kamali Moghaddam, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "418", "instructor": "Kamali Moghaddam, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "418", "instructor": "Kamali Moghaddam, M", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "418", "instructor": "Yu, Y", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "418", "instructor": "Yu, Y", "description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "420", "instructor": "Kale, L", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "420", "instructor": "Kale, L", "description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "421", "instructor": "Gunter, E", "description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "423", "instructor": "King, S", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "423", "instructor": "King, S", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "425", "instructor": "Nahrstedt, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "431", "instructor": "Rahmaniheris, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "431", "instructor": "Al-Nayeem, A", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "438", "instructor": "Hajek, B", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "443", "instructor": "Bretl, T", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "443", "instructor": "Bretl, T", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "443", "instructor": "Bretl, T", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "443", "instructor": "Bretl, T", "description": "Same as AE 482, ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "461", "instructor": "Fatemieh, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "461", "instructor": "Fatemieh, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "465", "instructor": "Bailey, B", "description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "491", "instructor": "Bashir, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "492", "instructor": "Woodley, M", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. ", "creditHrs": "3 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Amir, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Amir, E", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Angrave, L", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Caesar, M", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "498", "instructor": "Kamin, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "505", "instructor": "Jewett, B", "description": "Same as ATMS 502 and CSE 566. See ATMS 502.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in database management system design and implementation, and major recent developments in the field. Relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "522", "instructor": "Rosu, G", "description": "Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "527", "instructor": "Johnson, R", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. Same as CSE 529. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "536", "instructor": "Kalbarczyk, Z", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as CSE 524 and ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "545", "instructor": "Engelbrecht-Wiggans, R", "description": "Same as BADM 575. See BADM 575.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "558", "instructor": "Hirani, A", "description": "Advanced topics in numerical analysis selected from areas of current research. Same as CSE 513. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "563", "instructor": "Gunter, C", "description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. Same as ECE 524. Prerequisite: CS 461 or CS 463.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "571", "instructor": "West, D", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "573", "instructor": "Har-Peled, S", "description": "Theoretical analysis of various algorithms: sorting, searching, selection, polynomial evaluation, matrix multiplication, and multiplication of real numbers. Same as CSE 515. May be repeated. Prerequisite: CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "577", "instructor": "Milenkovic, O", "description": "Same as ECE 556 and MATH 579. See ECE 556.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "578", "instructor": "Blahut, R", "description": "Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Sinha, S", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Gunter, C", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Belford, G", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "591", "instructor": "Caesar, M", "description": "Seminar on topics of current interest as announced in the Class Schedule. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary. Prerequisite: As specified for each topic offering, see Class Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Agha, G", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Berlin, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Hart, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Erickson, J", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Borisov, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Vaidya, N", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Godfrey, P", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Kravets, R", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2009", "term": "Fall 2009", "courseNumber": "598", "instructor": "Vasudevan, S", "description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Agarwal, G", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Agarwal, G", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "173", "instructor": "Chambers, E", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "173", "instructor": "Chambers, E", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "173", "instructor": "Chambers, E", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "173", "instructor": "Chambers, E", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "173", "instructor": "Chambers, E", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "173", "instructor": "Chambers, E", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "196", "instructor": "Chambers, E", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "210", "instructor": "Pasternack, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "210", "instructor": "Pasternack, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "210", "instructor": "Pasternack, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "210", "instructor": "Pasternack, J", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "231", "instructor": "Garzaran, M", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "241", "instructor": "Angrave, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "257", "instructor": "Olson, L", "description": "Floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines. Intended for students in science and engineering. Same as MATH 257. Credit is not given if CS 450 credit has already been earned. (Counts for advanced hours in LAS.) Prerequisite: CS 101 or CS 125; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "296", "instructor": "Garzaran, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "296", "instructor": "Olson, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "411", "instructor": "Kim, J", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "411", "instructor": "Kim, J", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "413", "instructor": "Vijay, S", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "413", "instructor": "Vijay, S", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "414", "instructor": "Nahrstedt, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "417", "instructor": "Tettegah, S", "description": "Same as CI 435. See CI 435.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "418", "instructor": "Feng, W", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "418", "instructor": "Feng, W", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "419", "instructor": "Hart, J", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "419", "instructor": "Hart, J", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "420", "instructor": "Kale, L", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "420", "instructor": "Kale, L", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "421", "instructor": "Kamin, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "423", "instructor": "Campbell, R", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "424", "instructor": "Sha, L", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "424", "instructor": "Sha, L", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "425", "instructor": "Hu, Y", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "428", "instructor": "Johnson, R", "description": "Continuation of CS 427. Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "429", "instructor": "Johnson, R", "description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 427 and CS 429. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "431", "instructor": "Caccamo, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "435", "instructor": "Wong, M", "description": "Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "435", "instructor": "Wong, M", "description": "Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "439", "instructor": "Vaidya, N", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "439", "instructor": "Vaidya, N", "description": "Same as ECE 439. See ECE 439.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "440", "instructor": "Amir, E", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "440", "instructor": "Amir, E", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "450", "instructor": "Hirani, A", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 or CS 125; CS 257 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "450", "instructor": "Hirani, A", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 or CS 125; CS 257 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "455", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations. Examines finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411 and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 257; one of MATH 241, MATH 285, MATH 380.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "455", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations. Examines finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411 and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 257; one of MATH 241, MATH 285, MATH 380.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "461", "instructor": "Borisov, N", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "461", "instructor": "Borisov, N", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "462", "instructor": "Vasudevan, S", "description": "Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "477", "instructor": "Parthasarathy, M", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "493", "instructor": "Johnson, R", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "494", "instructor": "Johnson, R", "description": "Continuation of CS 492. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. 3 undergraduate hours. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Marinov, D", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Marinov, D", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Garnett, G", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Wah, B", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Wah, B", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Jacobson, S", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "498", "instructor": "Jacobson, S", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "522", "instructor": "Rosu, G", "description": "The theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics. Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "523", "instructor": "King, S", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "524", "instructor": "Agha, G", "description": "Introduction to the theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental/theoretical distributed computing.  Reviews classical work in each, and uses design methodologies to explore overlaps across the three otherwise scattered research areas.  Studies revolve around protocol design, systems issues, and theory.  Reading selections are roughly two-third classical to one-third contemporary, which are updated every year.  Students learn to write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "526", "instructor": "Adve, V", "description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. Same as CSE 526. Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. Same as CSE 522 and ECE 533. Prerequisite: CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "536", "instructor": "Iyer, R", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "543", "instructor": "Forsyth, D", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "546", "instructor": "Roth, D", "description": "Introduction to the central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Presents the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within these and in key natural language applications. Prerequisite: CS 446 and CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "548", "instructor": "Dejong, G", "description": "Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; survey of the state-of-the-art in artificial intelligence. Same as ECE 548. Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "554", "instructor": "Gropp, W", "description": "Introduction to numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512. Prerequisite: One of CS 450, CS 455, CS 458, CS 459.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "565", "instructor": "Bailey, B", "description": "In-depth coverage of advanced topics in human-computer interaction (HCI). Topics include applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented semester project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "573", "instructor": "Chekuri, C", "description": "Theoretical analysis of various algorithms: sorting, searching, selection, polynomial evaluation, matrix multiplication, and multiplication of real numbers. Same as CSE 515. May be repeated. Prerequisite: CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "579", "instructor": "Prabhakaran, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579 and MATH 578. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Roth, D", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Levinson, S", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Padua, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Erickson, J", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Johnson, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Twidale, M", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Sinha, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Spring 2008", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "225", "instructor": "McHenry, K", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "225", "instructor": "McHenry, K", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "225", "instructor": "McHenry, K", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "231", "instructor": "Bhatele, A", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "273", "instructor": "Milans, K", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "273", "instructor": "Milans, K", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "296", "instructor": "McHenry, K", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "296", "instructor": "Bhatele, A", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "421", "instructor": "Hills, M", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "421", "instructor": "Hills, M", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "425", "instructor": "Harandi, M", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Summer 2008", "courseNumber": "498", "instructor": "Heeren, C", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field is presented along with specific examples of problem areas and methods of solution. Recommended for all freshman Computer Science majors.", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Fister, A", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Bongen, K", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Bongen, K", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. Credit is not given for both CS 105 and CS 101. Prerequisite: MATH 012. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Aktemur, T", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Akce, A", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Akce, A", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "125", "instructor": "Angrave, L", "description": "Introduces basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "173", "instructor": "Fleck, M", "description": "Examines discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "196", "instructor": "Gambill, T", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "196", "instructor": "Angrave, L", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "196", "instructor": "Fleck, M", "description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "210", "instructor": "Krauss, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "210", "instructor": "Krauss, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "210", "instructor": "Krauss, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "210", "instructor": "Krauss, D", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Junior standing required. Prerequisite: CS 225.", "creditHrs": "2 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "231", "instructor": "Kale, L", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "232", "instructor": "Cunningham, R", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "232", "instructor": "Cunningham, R", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "232", "instructor": "Cunningham, R", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "232", "instructor": "Cunningham, R", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "232", "instructor": "Garzaran, M", "description": "Second-level course in computer architecture. Machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Chen, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Fagen, W", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Fagen, W", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Gupta, I", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Chen, L", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Gupta, I", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Gupta, I", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "241", "instructor": "Gupta, I", "description": "Covers the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232. ", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "242", "instructor": "Kiyak, F", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "257", "instructor": "Olson, L", "description": "Floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines. Intended for students in science and engineering. Same as MATH 257. Credit is not given if CS 450 credit has already been earned. (Counts for advanced hours in LAS.) Prerequisite: CS 101 or CS 125; MATH 225 or MATH 415; MATH 241.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "296", "instructor": "Kale, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "296", "instructor": "Garzaran, M", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "296", "instructor": "Olson, L", "description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "373", "instructor": "Prabhakar, P", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "373", "instructor": "Hodosh, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "373", "instructor": "Hodosh, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "373", "instructor": "Hodosh, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "373", "instructor": "Prabhakaran, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "373", "instructor": "Prabhakaran, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 173 or MATH 213; CS 225. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "411", "instructor": "Minami, K", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "411", "instructor": "Minami, K", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "418", "instructor": "Chen, A", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "418", "instructor": "Chen, A", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "418", "instructor": "Chen, A", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "418", "instructor": "Hart, J", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "418", "instructor": "Hart, J", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 241. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "419", "instructor": "Yu, Y", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "419", "instructor": "Yu, Y", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "423", "instructor": "King, S", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "423", "instructor": "King, S", "description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods. Examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "425", "instructor": "Nahrstedt, K", "description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 373.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "431", "instructor": "AlMalkawi, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "431", "instructor": "AlMalkawi, M", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "431", "instructor": "Sha, L", "description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "438", "instructor": "Vaidya, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "440", "instructor": "Dejong, G", "description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "443", "instructor": "Hutchinson, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "443", "instructor": "Hutchinson, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "443", "instructor": "Hutchinson, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "443", "instructor": "Hutchinson, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Presents the main theoretical paradigms and key ideas developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Reviews several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "446", "instructor": "Roth, D", "description": "Theory and basic techniques in machine learning. Presents the main theoretical paradigms and key ideas developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Reviews several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "465", "instructor": "Karahalios, K", "description": "A project-focused course that covers fundamental principles of user interface design, implementation, and evaluation. Small teams work on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "465", "instructor": "Karahalios, K", "description": "A project-focused course that covers fundamental principles of user interface design, implementation, and evaluation. Small teams work on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "466", "instructor": "Sinha, S", "description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "473", "instructor": "Blatti, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "473", "instructor": "Blatti, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "473", "instructor": "Blatti, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "473", "instructor": "Blatti, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Examines formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; an overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Examines formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; an overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "481", "instructor": "Jacobson, S", "description": "Same as IE 410. See IE 410.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "491", "instructor": "Zilles, C", "description": "Seminar course for advanced undergraduate and graduate students. Topics will vary. Approved for S/U grading only. May be repeated to a maximum of 4 hours. May be repeated if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "492", "instructor": "Johnson, R", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. 3 undergraduate hours. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. ", "creditHrs": "3 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Padua, D", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Padua, D", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Amir, E", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Amir, E", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Angrave, L", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Parthasarathy, M", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Parthasarathy, M", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "498", "instructor": "Kamin, S", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "505", "instructor": "Jewett, B", "description": "Same as ATMS 502 and CSE 566. See ATMS 502.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "511", "instructor": "Chang, K", "description": "Advanced concepts in database management system design and implementation, and an introduction to the major recent developments in the field. Relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "527", "instructor": "Marinov, D", "description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Includes a number of case studies. Same as CSE 529. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as CSE 524 and ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "545", "instructor": "Engelbrecht-Wiggans, R", "description": "Same as BADM 575. See BADM 575.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "558", "instructor": "Hirani, A", "description": "Advanced topics in numerical analysis selected from areas of current research. Same as CSE 513. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "571", "instructor": "West, D", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "573", "instructor": "Erickson, J", "description": "Theoretical analysis of various algorithms: sorting, searching, selection, polynomial evaluation, matrix multiplication, and multiplication of real numbers. Same as CSE 515. May be repeated. Prerequisite: CS 473.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "575", "instructor": "West, D", "description": "Same as MATH 584. See MATH 584.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "578", "instructor": "Coleman, T", "description": "Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Parthasarathy, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Hockenmaier, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Belford, G", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Hart, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Gunter, C", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Agha, G", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Caesar, M", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Campbell, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Har-Peled, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2008", "term": "Fall 2008", "courseNumber": "598", "instructor": "Gropp, W", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Al-Shebli, B", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Al-Shebli, B", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Arizumi, N", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Benda, J", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Arizumi, N", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Benda, J", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Agrawal, M", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Bhardwaj, R", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Kantor, A", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Kantor, A", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Agrawal, M", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "173", "instructor": "Heeren, C", "description": "Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "173", "instructor": "Heeren, C", "description": "Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "196", "instructor": "Gambill, T", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "196", "instructor": "Peiper, C", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "196", "instructor": "Heeren, C", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "199", "instructor": "Francis, G", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "210", "instructor": "Hilldore, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "210", "instructor": "Hilldore, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "210", "instructor": "Hilldore, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "210", "instructor": "Hilldore, B", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "231", "instructor": "Parr, D", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "232", "instructor": "Young, P", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "232", "instructor": "Adamczyk, P", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "232", "instructor": "Grundmeier, D", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "232", "instructor": "Lee, E", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "241", "instructor": "Angrave, L", "description": "Introduction to systems programming: This course will cover the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "257", "instructor": "Hirani, A", "description": "Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines. Same as MATH 257. Credit is not given if CS 450 credit has already been earned. (Counts for advanced hours in LAS.) Prerequisite: CS 101 or CS 125; MATH 225 or MATH 415; MATH 241 (formerly MATH 243) or MATH 242.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "273", "instructor": "Chekuri, C", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "296", "instructor": "Parr, D", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "296", "instructor": "Hirani, A", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "410", "instructor": "Zhai, C", "description": "Introduction to the theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Same as LIS 410. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "411", "instructor": "Angrave, L", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "411", "instructor": "Angrave, L", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "413", "instructor": "Furedi, Z", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "413", "instructor": "Furedi, Z", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "414", "instructor": "Karahalios, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "414", "instructor": "Karahalios, K", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "417", "instructor": "Tettegah, S", "description": "Same as CI 435. See CI 435.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "418", "instructor": "Forsyth, D", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; one of MATH 225, MATH 241 (formerly MATH 243), MATH 242.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "418", "instructor": "Forsyth, D", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; one of MATH 225, MATH 241 (formerly MATH 243), MATH 242.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "420", "instructor": "Kale, L", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "420", "instructor": "Kale, L", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 400 or CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "423", "instructor": "Liang, J", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "423", "instructor": "Liang, J", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods; examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods; examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "425", "instructor": "Hu, Y", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "428", "instructor": "Marinov, D", "description": "Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "428", "instructor": "Marinov, D", "description": "Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "429", "instructor": "Marinov, D", "description": "Identical to CS 428 except for the additional writing component. See CS 428. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 427 and CS 429. Prerequisite: CS 427.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "433", "instructor": "Harrison, W", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "433", "instructor": "Harrison, W", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "435", "instructor": "Chen, D", "description": "Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "435", "instructor": "Chen, D", "description": "Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "438", "instructor": "Kravets, R", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software.Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 413.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "440", "instructor": "Levinson, S", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "440", "instructor": "Levinson, S", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "450", "instructor": "Heath, M", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 or CS 125; CS 257 or MATH 415; MATH 385.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "450", "instructor": "Heath, M", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 or CS 125; CS 257 or MATH 415; MATH 385.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "455", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations; includes finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411 and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 257; one of MATH 241 (formerly MATH 243),MATH 380, MATH 385.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "455", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations; includes finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411 and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 257; one of MATH 241 (formerly MATH 243),MATH 380, MATH 385.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "462", "instructor": "Nicol, D", "description": "Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "473", "instructor": "Erickson, J", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "473", "instructor": "Erickson, J", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "477", "instructor": "Rosu, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours.  3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "477", "instructor": "Rosu, G", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours.  3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "491", "instructor": "Pitt, L", "description": "Seminar course for advanced undergraduate and graduate students. Topics will vary. Approved for S/U grading only. May be repeated to a maximum of 4 hours. May be repeated if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "491", "instructor": "Pitt, L", "description": "Seminar course for advanced undergraduate and graduate students. Topics will vary. Approved for S/U grading only. May be repeated to a maximum of 4 hours. May be repeated if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "493", "instructor": "Johnson, R", "description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. To fulfill the Advanced Composition Requirement, credit must be earned for both CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "494", "instructor": "Johnson, R", "description": "Continuation of CS 492. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation.  Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. 3 undergraduate hours. Credit is not given for both CS 494 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Hwu, W", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Hwu, W", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Gunter, C", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Gunter, C", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Campbell, R", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Campbell, R", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Borisov, N", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Borisov, N", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Vaidya, N", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Vaidya, N", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Kamin, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Kamin, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "512", "instructor": "Han, J", "description": "Advanced course on principles and algorithms of data mining. Topics include data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; and research frontiers. Prerequisite: CS 412.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "519", "instructor": "Hart, J", "description": "Detailed study of visualization techniques useful in analysis of engineering and scientific data. Topics include study of physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; and interactive steering. Same as CSE 527. Prerequisite: CS 418.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "523", "instructor": "Campbell, R", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Topics include: process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523. Prerequisite: CS 423, CS 425, and CS 433.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "524", "instructor": "Agha, G", "description": "Introduction to the theory of concurrency and concurrent programming languages. Topics include formal models of concurrent computation such as process algebras, nets and actors; high level concurrent programming languages and their operational semantics; and methods for reasoning about correctness and complexity of concurrent programs.  Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "525", "instructor": "Gupta, I", "description": "Peer-to-peer systems, sensor networks, and fundamental/theoretical distributed computing.  Reviews classical work in each, and uses design methodologies to explore overlaps across the three otherwise scattered research areas.  Studies revolve around protocol design, systems issues, and theory.  Reading selections are roughly two-third classical to one-third contemporary, which are updated every year.  Students learn to write critiques, make presentations, and create a conference paper in a systematic manner. Prerequisite: One of CS 423, CS 425, CS 438.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "526", "instructor": "Padua, D", "description": "Advanced topics in compiler construction, including incremental and interactive compiling, error correction, code optimization, models of code generators, etc. Same as CSE 526.  Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "548", "instructor": "Dejong, G", "description": "Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; and survey of the state-of-the-art in artificial intelligence. Same as ECE 548.  Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "550", "instructor": "Olson, L", "description": "A comprehensive treatment of algebraic and multigrid iterative solvers for systems of equations, primarily linear equations arising from discretization of partial differential equations. Same as CSE 511. Prerequisite: CS 450.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "565", "instructor": "Bailey, B", "description": "This course provides in-depth coverage of advanced topics in human-computer interaction (HCI).  Topics include applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures and bimannual input, and usability evaluation techniques. The class meetings will consist of traditional classroom lectures along with group discussions. In the course, students will complete a research-oriented semester project of their choosing. Prerequisite: CS 465.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "575", "instructor": "Furedi, Z", "description": "Same as MATH 584. See MATH 584.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "576", "instructor": "Meseguer, J", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "579", "instructor": "Prabhakaran, M", "description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. Same as ECE 579 and MATH 578. Prerequisite: CS 473 or CS 475.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Kravets, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Hirani, A", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Forsyth, D", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Chang, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Ray, S", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms as topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "598", "instructor": "Amir, E", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "598", "instructor": "Sha, L", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "598", "instructor": "Johnson, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "598", "instructor": "Kravets, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "598", "instructor": "Sinha, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Spring 2007", "courseNumber": "598", "instructor": "King, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "196", "instructor": "Gambill, T", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "225", "instructor": "Peiper, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "225", "instructor": "Peiper, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "231", "instructor": "Parr, D", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "273", "instructor": "Kumar, V", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "296", "instructor": "Peiper, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "296", "instructor": "Parr, D", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "421", "instructor": "Sundresh, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "421", "instructor": "Sundresh, S", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "425", "instructor": "Harandi, M", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Summer 2007", "courseNumber": "498", "instructor": "Heeren, C", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "100", "instructor": "Pitt, L", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field is presented along with specific examples of problem areas and methods of solution. Recommended for all freshman Computer Science majors.", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Eytani, Y", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Ashnai, S", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Ashnai, S", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "101", "instructor": "Eytani, Y", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and CS 105. Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Al-Shebli, B", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Al-Shebli, B", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Agarwal, G", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Agarwal, G", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course. Credit is not given for both CS 105 and CS 101. Prerequisie: MATH 012 or equivalent. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Angrave, L", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Angrave, L", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Angrave, L", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Angrave, L", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Angrave, L", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Angrave, L", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and others with a deep interest in computing. Introduces basic concepts in computing and fundamental techniques for solving computational problems. Credit is not given for both CS 125 and ECE 190. Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "173", "instructor": "Erickson, J", "description": "Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "196", "instructor": "Gambill, T", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "196", "instructor": "Angrave, L", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "196", "instructor": "Erickson, J", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "199", "instructor": "Pitt, L", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "210", "instructor": "Blake, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "210", "instructor": "Blake, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "210", "instructor": "Blake, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "210", "instructor": "Blake, R", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Includes oral presentations. Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213. ", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "231", "instructor": "Kale, L", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "232", "instructor": "Chaudhary, A", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "232", "instructor": "Young, P", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "232", "instructor": "Young, P", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS 231. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "241", "instructor": "Abdelzaher, T", "description": "Introduction to systems programming: This course will cover the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. Credit is not given for both CS 241 and ECE 391. Prerequisite: CS 225; credit or concurrent registration in CS 232.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "242", "instructor": "Ellison, C", "description": "Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "257", "instructor": "Hirani, A", "description": "Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines. Same as MATH 257. Credit is not given if CS 450 credit has already been earned. (Counts for advanced hours in LAS.) Prerequisite: CS 101 or CS 125; MATH 225 or MATH 415; MATH 241 (formerly MATH 243) or MATH 242.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems. Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "296", "instructor": "Kale, L", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "296", "instructor": "Harrison, W", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "296", "instructor": "Hirani, A", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated. Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule).", "creditHrs": "1 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "411", "instructor": "Minami, K", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "411", "instructor": "Minami, K", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 500.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 500.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations, and applications. 3 undergraduate or graduate hours. 4 graduate hours. Prerequisite: CS 225 or CS 500.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "418", "instructor": "Feng, W", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; one of MATH 225, MATH 241 (formerly MATH 243), MATH 242.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "418", "instructor": "Feng, W", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; one of MATH 225, MATH 241 (formerly MATH 243), MATH 242.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "422", "instructor": "Rosu, G", "description": "Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "422", "instructor": "Rosu, G", "description": "Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "423", "instructor": "King, S", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "423", "instructor": "King, S", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "425", "instructor": "Gupta, I", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428. Prerequisite: CS 241 or ECE 391.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "426", "instructor": "Adve, V", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "427", "instructor": "Johnson, R", "description": "Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. CS 427 combined with CS 429 fulfills the Advanced Composition Requirement. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "433", "instructor": "Hameed Chaudhry, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "433", "instructor": "Hameed Chaudhry, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "438", "instructor": "Borisov, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "440", "instructor": "Dejong, G", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "440", "instructor": "Dejong, G", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "443", "instructor": "Candido, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "443", "instructor": "Kartan, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "443", "instructor": "Candido, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "443", "instructor": "Spong, M", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "446", "instructor": "Roth, D", "description": "Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "446", "instructor": "Roth, D", "description": "Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 or CS 125; CS 257 or MATH 415; MATH 385.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 or CS 125; CS 257 or MATH 415; MATH 385.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "458", "instructor": "Heath, M", "description": "Direct and iterative methods for systems of linear equations; over determined systems of equations; eigenvalue problems; nonlinear systems of equations. Same as CSE 412 and MATH 458. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 257.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "458", "instructor": "Heath, M", "description": "Direct and iterative methods for systems of linear equations; over determined systems of equations; eigenvalue problems; nonlinear systems of equations. Same as CSE 412 and MATH 458. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 257.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: Ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: Authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: Ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: Authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "461", "instructor": "Hinrichs, S", "description": "Fundamental principles of computer and communications security and information assurance: Ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: Authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "463", "instructor": "Hu, Y", "description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "465", "instructor": "Bailey, B", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype. Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate  hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "465", "instructor": "Bailey, B", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype. Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation. Same as LIS 465. 3 undergraduate  hours. 3 or 4 graduate hours. Prerequisite: CS 225 or CS 400.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "473", "instructor": "Chekuri, C", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 273.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "491", "instructor": "Pitt, L", "description": "Seminar course for advanced undergraduate and graduate students. Topics will vary. Approved for S/U grading only. May be repeated to a maximum of 4 hours. May be repeated if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "491", "instructor": "Pitt, L", "description": "Seminar course for advanced undergraduate and graduate students. Topics will vary. Approved for S/U grading only. May be repeated to a maximum of 4 hours. May be repeated if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "492", "instructor": "Johnson, R", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. CS 492 combined with CS 493 fulfills the Advanced Composition Requirement. 3 undergraduate hours. Credit is not given for both CS 492 and a project course in another engineering department for the same project. For Computer Science majors with senior standing. ", "creditHrs": "3 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Forsyth, D", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Hockenmaier, J", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Karahalios, K", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Karahalios, K", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Viswanathan, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Prabhakaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Prabhakaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Jacobson, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Jacobson, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Sinha, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "498", "instructor": "Sinha, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "505", "instructor": "Jewett, B", "description": "Same as ATMS 502 and CSE 566. See ATMS 502.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "511", "instructor": "Zhai, C", "description": "Advanced concepts in database management system design and implementation, and an introduction to the major recent developments in the field. Topics include the relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field. Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "527", "instructor": "Marinov, D", "description": "Advanced topics in software engineering, including fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Course also includes a number of case studies. Same as CSE 529. Prerequisite: CS 428 or CS 429.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as CSE 524 and ECE 541. See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "558", "instructor": "Olson, L", "description": "Same as CSE 513. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "571", "instructor": "West, D", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "572", "instructor": "West, D", "description": "Same as MATH 581. See MATH 581.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "577", "instructor": "Milenkovic, O", "description": "Same as ECE 556 and MATH 579. See ECE 556.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "578", "instructor": "Moulin, P", "description": "Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Zilles, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Chekuri, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Belford, G", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "591", "instructor": "Ray, S", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for S/U grading only. May be repeated in the same or subsequent terms if topics vary. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Gunter, C", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Schatz, B", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Hou, J", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Caccamo, M", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Campbell, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Kravets, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Lavalle, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Kamin, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2007", "term": "Fall 2007", "courseNumber": "598", "instructor": "Adve, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated. Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Chen, C", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Chen, C", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Belcher, M", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Belcher, M", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Acharya, E", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "105", "instructor": "Acharya, E", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "125", "instructor": "Zych, J", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "173", "instructor": "Heeren, C", "description": "Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "173", "instructor": "Heeren, C", "description": "Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "196", "instructor": "Gambill, T", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "196", "instructor": "Zych, J", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "196", "instructor": "Woodbury, M", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "196", "instructor": "Heeren, C", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "199", "instructor": "Heeren, C", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "199", "instructor": "Woodbury, M", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "210", "instructor": "Lee, E", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "210", "instructor": "Lee, E", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "210", "instructor": "Lee, E", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "210", "instructor": "Lee, E", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "231", "instructor": "Harrison, W", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "232", "instructor": "Zilles, C", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "241", "instructor": "Nahrstedt, K", "description": "Introduction to systems programming: This course will cover the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools.  Prerequisite: CS 225; CS 231; credit or concurrent registration in CS 232.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "257", "instructor": "Olson, L", "description": "Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines.  Same as MATH 257. Students with earned credit in CS 450 may not receive additional credit for CS 257 or MATH 257. (Counts for advanced hours in LAS.) Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems; computational complexity and NP-completeness.  Prerequisite: CS 125 and either CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "296", "instructor": "Zych, J", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "296", "instructor": "Harrison, W", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "296", "instructor": "Zilles, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "296", "instructor": "Olson, L", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "411", "instructor": "Doan, A", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "411", "instructor": "Doan, A", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "413", "instructor": "Li, X", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "413", "instructor": "Li, X", "description": "Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "414", "instructor": "Bailey, B", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241 or CS 423.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "414", "instructor": "Bailey, B", "description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241 or CS 423.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "417", "instructor": "Tettegah, S", "description": "Same as CI 435. See CI 435.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "419", "instructor": "Hart, J", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "419", "instructor": "Hart, J", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "420", "instructor": "Padua, D", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402, and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite:  CS 400 or CS 225; or advanced programming experience.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "420", "instructor": "Padua, D", "description": "Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402, and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite:  CS 400 or CS 225; or advanced programming experience.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "421", "instructor": "Agha, G", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "421", "instructor": "Agha, G", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "423", "instructor": "Zhou, Y", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "423", "instructor": "Zhou, Y", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods; examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "424", "instructor": "Abdelzaher, T", "description": "Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods; examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "425", "instructor": "Hu, Y", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "428", "instructor": "Johnson, R", "description": "Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "428", "instructor": "Johnson, R", "description": "Software development, management, and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "429", "instructor": "Johnson, R", "description": "Course is identical to CS 428 except for the additional writing component.  See CS 428.  Prerequisite: CS 427 Software Engineering, I.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "433", "instructor": "Adve, S", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "438", "instructor": "Luo, H", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438.  Prerequisite: CS 241; one of MATH 461, MATH 463, ECE 413.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "440", "instructor": "Ponce, J", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "440", "instructor": "Ponce, J", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "446", "instructor": "Roth, D", "description": "Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "446", "instructor": "Roth, D", "description": "Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "450", "instructor": "Hirani, A", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "450", "instructor": "Hirani, A", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "455", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations; includes finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411, and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257; one of MATH 380, MATH 385, MATH 386, MATH 441.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "455", "instructor": "Bond, S", "description": "Introduction to numerical techniques for initial and boundary value problems in partial differential equations; includes finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411, and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257; one of MATH 380, MATH 385, MATH 386, MATH 441.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "462", "instructor": "Nicol, D", "description": "Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "465", "instructor": "Karahalios, K", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype.  Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation.   Same as LIS 465.  3 undergraduate  hours.  3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "465", "instructor": "Karahalios, K", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype.  Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation.   Same as LIS 465.  3 undergraduate  hours.  3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "473", "instructor": "Viswanathan, M", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "477", "instructor": "Meseguer, J", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours.  3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "477", "instructor": "Meseguer, J", "description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours.  3 or 4 graduate hours. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "493", "instructor": "Johnson, R", "description": "Course is identical to CS 494 except for the additional writing component.  See CS 494.  3 undergraduate hours. Students must enroll for a two term sequence, CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "494", "instructor": "Johnson, R", "description": "Continuation of a project course in computer science.  Students work in teams to solve typical commercial or industrial problems.  Work involves planning, design, and implementation.  Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. 3 undergraduate hours. Students must enroll for a two term sequence, CS 492 and either CS 493 or CS 494.  Credit is not given for both CS 494 and a project course in another engineering department for the same project.  Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Zhai, C", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Goggin, N", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Marinov, D", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Gunderson, J", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Kale, L", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Parthasarathy, M", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "512", "instructor": "Han, J", "description": "Advanced course on principles and algorithms of data mining.  Topics include data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; and research frontiers.   Prerequisite: CS 412 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "522", "instructor": "Rosu, G", "description": "Topics in the theory of programming languages including: functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics.  Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "523", "instructor": "Biehl, J", "description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Topics include: process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523.  Prerequisite: CS 423, CS 425, and CS 433; or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "526", "instructor": "Adve, V", "description": "Advanced topics in compiler construction, including incremental and interactive compiling, error correction, code optimization, models of code generators, etc. Same as CSE 526.  Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "533", "instructor": "Torrellas, J", "description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; and overall computer system ideas. Same as CSE 522 and ECE 533.  Prerequisite: Consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "536", "instructor": "Iyer, R", "description": "Same as ECE 542. See ECE 542.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "548", "instructor": "Dejong, G", "description": "Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; and survey of the state-of-the-art in artificial intelligence. Same as ECE 548.  Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "549", "instructor": "Cummins, D", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "554", "instructor": "Heath, M", "description": "Introduction to numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques. Same as CSE 512.  Prerequisite: One of CS 450, CS 455, CS 458, or CS 459; or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "570", "instructor": "Ramos, E", "description": "Design of geometric algorithms for grids and triangulations. Development of geometric and topological prerequisites (no prior course in these subjects is assumed). Topics include complexes, subdivisions, Delaunay triangulations, randomized algorithms, homology groups, splines and surfaces. Same as CSE 514.  Prerequisite: CS 473 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "572", "instructor": "West, D", "description": "Same as MATH 581. See MATH 581.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "573", "instructor": "Erickson, J", "description": "Theoretical analysis of various algorithms; topics include sorting, searching, selection, polynomial evaluation, matrix multiplication, and multiplication of real numbers. Same as CSE 515. May be repeated.  Prerequisite: CS 473 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "576", "instructor": "Gunter, E", "description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. Prerequisite: Consent of instructor.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Luo, H", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Adve, V", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Zilles, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Roth, D", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Amir, E", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Garland, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Heeren, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Kale, L", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Winslett, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "591", "instructor": "Ray, S", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Gunter, C", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Amir, E", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Gupta, I", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Hou, J", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Chang, K", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Garland, M", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Johnson, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Kravets, R", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Gasser, L", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Spring 2006", "courseNumber": "598", "instructor": "Ray, S", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "196", "instructor": "Gambill, T", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "196", "instructor": "Peiper, C", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "231", "instructor": "Richards, M", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "273", "instructor": "Kumar, V", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems; computational complexity and NP-completeness.  Prerequisite: CS 125 and either CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "296", "instructor": "Richards, M", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "421", "instructor": "Hills, M", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "421", "instructor": "Hills, M", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "425", "instructor": "Harandi, M", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "498", "instructor": "Campbell, R", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Summer 2006", "courseNumber": "498", "instructor": "Campbell, R", "description": "Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "100", "instructor": "Kamin, S", "description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field is presented along with specific examples of problem areas and methods of solution. Recommended for all freshman Computer Science majors.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Gambill, T", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "101", "instructor": "Bengtson, E", "description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220 or MATH 221. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Chen, F", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Chen, F", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "105", "instructor": "Gambill, T", "description": "Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "125", "instructor": "Peiper, C", "description": "First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems.   Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "173", "instructor": "Heeren, C", "description": "Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "196", "instructor": "Gambill, T", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "196", "instructor": "Peiper, C", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "196", "instructor": "Woodbury, M", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "196", "instructor": "Heeren, C", "description": "Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "199", "instructor": "Kamin, S", "description": "May be repeated.", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "210", "instructor": "Cozzie, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "210", "instructor": "Cozzie, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "210", "instructor": "Cozzie, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "210", "instructor": "Cozzie, A", "description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. Students will be required to make oral presentations.  Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "225", "instructor": "Heeren, C", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or ECE 190; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "231", "instructor": "Harrison, W", "description": "Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "232", "instructor": "Kumar, V", "description": "Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS.) Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "241", "instructor": "Angrave, L", "description": "Introduction to systems programming: This course will cover the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "241", "instructor": "Angrave, L", "description": "Introduction to systems programming: This course will cover the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "257", "instructor": "Olson, L", "description": "Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines.  Same as MATH 257. Students with earned credit in CS 450 may not receive additional credit for CS 257 or MATH 257. (Counts for advanced hours in LAS.) Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 241 (formerly MATH 243) or MATH 242.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "273", "instructor": "Fleck, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems.  Prerequisite: CS 125 and either CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "296", "instructor": "Heeren, C", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "296", "instructor": "Harrison, W", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "296", "instructor": "Kumar, V", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "296", "instructor": "Olson, L", "description": "Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "411", "instructor": "Angrave, L", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "411", "instructor": "Angrave, L", "description": "Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations, and applications.   3 undergraduate or graduate hours.  4 graduate hours.  Prerequisite: CS 225 or CS 500; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations, and applications.   3 undergraduate or graduate hours.  4 graduate hours.  Prerequisite: CS 225 or CS 500; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations, and applications.   3 undergraduate or graduate hours.  4 graduate hours.  Prerequisite: CS 225 or CS 500; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 241 (formerly MATH 243) or MATH 242.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "418", "instructor": "Yu, Y", "description": "Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 241 (formerly MATH 243) or MATH 242.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "419", "instructor": "Forsyth, D", "description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 418.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "421", "instructor": "Gunter, E", "description": "Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "422", "instructor": "Rosu, G", "description": "Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "422", "instructor": "Rosu, G", "description": "Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "423", "instructor": "Abdelzaher, T", "description": "The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "425", "instructor": "Gupta, I", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "425", "instructor": "Gupta, I", "description": "Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "426", "instructor": "Padua, D", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "426", "instructor": "Padua, D", "description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises.  Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "427", "instructor": "Marinov, D", "description": "Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises.  Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "431", "instructor": "Sha, L", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "433", "instructor": "Torrellas, J", "description": "Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "438", "instructor": "Borisov, N", "description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438.  Prerequisite: CS 241; one of MATH 461, MATH 463, ECE 413.", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "440", "instructor": "Amir, E", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "440", "instructor": "Amir, E", "description": "Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "443", "instructor": "Holm, J", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "443", "instructor": "Holm, J", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "443", "instructor": "Holm, J", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "443", "instructor": "Hutchinson, S", "description": "Same as ECE 470, GE 421, and ME 445. See ECE 470.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "446", "instructor": "Dejong, G", "description": "Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "446", "instructor": "Dejong, G", "description": "Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "450", "instructor": "Bond, S", "description": "Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "465", "instructor": "Bailey, B", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype.  Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation.   Same as LIS 465.  3 undergraduate  hours.  3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "465", "instructor": "Bailey, B", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype.  Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation.   Same as LIS 465.  3 undergraduate  hours.  3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "473", "instructor": "Erickson, J", "description": "Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "476", "instructor": "Meseguer, J", "description": "Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "492", "instructor": "Johnson, R", "description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. Students must enroll for a two term sequence, CS 492 and either CS 493 or CS 494. 3 undergraduate hours. Credit is not given for both CS 492 and a project course in another engineering department for the same project.  Prerequisite: Senior standing in CS or consent of instructor.  ", "creditHrs": "3 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Hu, Y", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Hu, Y", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Garzaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Prabhakaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Prabhakaran, M", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Lavalle, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Sinha, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "498", "instructor": "Sinha, S", "description": "Lectures in topics of current interest. See Schedule for current topics. Approved for both letter and S/U grading.  May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "505", "instructor": "Jewett, B", "description": "Same as ATMS 502 and CSE 566. See ATMS 502.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "511", "instructor": "Zhai, C", "description": "Advanced concepts in database management system design and implementation, and an introduction to the major recent developments in the field.  Topics include the relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field.   Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "527", "instructor": "Johnson, R", "description": "Advanced topics in software engineering, including fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Course also includes a number of case studies.  Same as CSE 529.  Prerequisite: CS 428 or CS 429 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "541", "instructor": "Nicol, D", "description": "Same as CSE 524 and ECE 541.  See ECE 541.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "543", "instructor": "Li, F", "description": "Same as ECE 549. See ECE 549.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "545", "instructor": "Engelbrecht-Wiggans, R", "description": "Same as BADM 575. See BADM 575.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "549", "instructor": "Hummel, J", "description": "Same as PSYC 514, ANTH 514, EPSY 551, LING 570, and PHIL 514. See PSYC 514.", "creditHrs": "2 OR 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "571", "instructor": "West, D", "description": "Same as MATH 580. See MATH 580.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "577", "instructor": "Koetter, R", "description": "Same as ECE 556 and MATH 579. See ECE 556.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "578", "instructor": "Srikant, R", "description": "Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Harrison, W", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Bailey, B", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Zhai, C", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Hou, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Amir, E", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Han, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Erickson, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Meseguer, J", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Karahalios, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Heath, M", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Chang, K", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Belford, G", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Johnson, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Campbell, R", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Gupta, I", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Ray, S", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "591", "instructor": "Yu, Y", "description": "Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Hirani, A", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Gunter, C", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Chekuri, C", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Twidale, M", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Forsyth, D", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Luo, H", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Karahalios, K", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Caccamo, M", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2006", "term": "Fall 2006", "courseNumber": "598", "instructor": "Gasser, L", "description": "Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Chen, Z", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Bengtson, E", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Chen, Z", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Bengtson, E", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Colombi, A", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Colombi, A", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Davis, B", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "105", "instructor": "Davis, B", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Naisbitt, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Bashir, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Samoylov, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Koomen, P", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "McGovern, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Naisbitt, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Bashir, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Samoylov, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Koomen, P", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Gammer, I", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Gammer, I", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "125", "instructor": "Samoylov, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "173", "instructor": "Heeren, C", "description": "(C S 173) Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "173", "instructor": "Heeren, C", "description": "(C S 173) Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "196", "instructor": "Gambill, T", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "196", "instructor": "Zych, J", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "196", "instructor": "Woodbury, M", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "196", "instructor": "Heeren, C", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "210", "instructor": "Woodbury, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "210", "instructor": "Woodbury, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "210", "instructor": "Woodbury, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "210", "instructor": "Woodbury, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Ivan, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Korula, N", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Kinnersley, W", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Wong, L", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Korula, N", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Ivan, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Wong, L", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Kinnersley, W", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Wong, L", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "225", "instructor": "Korula, N", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "231", "instructor": "Kale, L", "description": "(C S 231) Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Zilles, C", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Comertoglu, M", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Keller, S", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Keller, S", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Comertoglu, M", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Keller, S", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "232", "instructor": "Zilles, C", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "257", "instructor": "Delfert, P", "description": "(C S 257) Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines Same as MATH 257. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS or MATH 257. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "273", "instructor": "Lavalle, S", "description": "(C S 273) Introduction to the various aspects of the theory of computation, including the necessary background in first order predicate logic, combinatorics, and recurrence relations; asymptotics; basics of algorithm analysis; NP- completeness; formal languages and automata.  Prerequisite: CS 125 and CS 173; or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "296", "instructor": "Zych, J", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "296", "instructor": "Kale, L", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "296", "instructor": "Zilles, C", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "296", "instructor": "Kerkhoven, T", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "400", "instructor": "Peiper, C", "description": "(C S 300) Course integrates software engineering principles with data structures implemented in C++. While prior experience with either C, C++ or Java is assumed, C++ will be taught in the first three weeks of the course. Software engineering will be covered in three stages: personal software process (checkpoints, project plans, defects and code reviews), prior to coding (process models, requirements and design) and after coding (testing and quality assurance techniques). The concepts, principles, and use of  data structures will include pointers, lists, arrays, sets, stacks, trees, hashing, graphs, priority queues and sorting. Special emphasis will be placed on the implementations of these structures in real-world applications Same as CSE 400. Credit is not given for both CS 400 and CS 225. Computer Science and Computer Engineering majors may not receive credit for CS 400. Prerequisite: CS 110 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "400", "instructor": "Peiper, C", "description": "(C S 300) Course integrates software engineering principles with data structures implemented in C++. While prior experience with either C, C++ or Java is assumed, C++ will be taught in the first three weeks of the course. Software engineering will be covered in three stages: personal software process (checkpoints, project plans, defects and code reviews), prior to coding (process models, requirements and design) and after coding (testing and quality assurance techniques). The concepts, principles, and use of  data structures will include pointers, lists, arrays, sets, stacks, trees, hashing, graphs, priority queues and sorting. Special emphasis will be placed on the implementations of these structures in real-world applications Same as CSE 400. Credit is not given for both CS 400 and CS 225. Computer Science and Computer Engineering majors may not receive credit for CS 400. Prerequisite: CS 110 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "411", "instructor": "Cheng, T", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "411", "instructor": "Cheng, T", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "413", "instructor": "Kostochka, A", "description": "(C S 313) Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "413", "instructor": "Kostochka, A", "description": "(C S 313) Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "418", "instructor": "Dong, S", "description": "(C S 318) Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "418", "instructor": "Dong, S", "description": "(C S 318) Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "419", "instructor": "Hart, J", "description": "(C S 319) Advanced methods for representing, displaying, and rendering two-, three-, and four- dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 418. ", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "419", "instructor": "Hart, J", "description": "(C S 319) Advanced methods for representing, displaying, and rendering two-, three-, and four- dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. Same as CSE 428. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 418. ", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "420", "instructor": "Padua, D", "description": "(C S 320)  Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402, and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite:  CS 400 or CS 225; or advanced programming experience.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "420", "instructor": "Padua, D", "description": "(C S 320)  Introduction to fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402, and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite:  CS 400 or CS 225; or advanced programming experience.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "421", "instructor": "Agha, G", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "421", "instructor": "Agha, G", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "423", "instructor": "Campbell, R", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "423", "instructor": "Campbell, R", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "424", "instructor": "Caccamo, M", "description": "(C S 324) Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods; examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 423 and CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "424", "instructor": "Caccamo, M", "description": "(C S 324) Examples of real-time computing systems; real-time scheduling and resource management algorithms; analytical and efficient validation methods; examples of real-time operating systems; temporal consistency of real-time data; formal methods for specification of and reasoning about timing constraints. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 423 and CS 431.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "425", "instructor": "Gupta, I", "description": "(C S 328) Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428.  Prerequisite: CS 423 or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "426", "instructor": "Adve, V", "description": "(C S 326) Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "426", "instructor": "Adve, V", "description": "(C S 326) Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "428", "instructor": "Johnson, R", "description": "(C S 329) Software development, management and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "428", "instructor": "Johnson, R", "description": "(C S 329) Software development, management and maintenance. Topics include project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 427.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "429", "instructor": "Johnson, R", "description": "Course is identical to CS 428 except for the additional writing component.  See CS 428.  Prerequisite: CS 427 Software Engineering, I.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "431", "instructor": "Jamall, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "431", "instructor": "Jamall, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "431", "instructor": "Cheema, A", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "431", "instructor": "Cheema, A", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "431", "instructor": "Sha, L", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "431", "instructor": "Sha, L", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "433", "instructor": "Harrison, W", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "433", "instructor": "Harrison, W", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "438", "instructor": "Kravets, R", "description": "(C S 338) Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to- point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438.  Prerequisite: CS 231 or ECE 290; one of  MATH 461, MATH 463, ECE 413.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "440", "instructor": "Bergstrom, A", "description": "(C S 348) Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "440", "instructor": "Bergstrom, A", "description": "(C S 348) Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "446", "instructor": "Roth, D", "description": "(C S 346) Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "446", "instructor": "Chan, J", "description": "(C S 346) Organized review of basic theoretical concepts and methods of machine learning and recognition; decision space and linguistic and relational representation of objects; statistical and deterministic recognition algorithms; various types of learning, including adaptive, procedural, and inductive; selected applications; and medical consulting, determination of cost-optimal classification rules, inferential information systems, and computer vision. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 and CS 440.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "450", "instructor": "Bond, S", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "450", "instructor": "Bond, S", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "455", "instructor": "De Sturler, E", "description": "(C S 355) Introduction to numerical techniques for initial and boundary value problems in partial differential equations; includes finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411, and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257; one of MATH 380, MATH 385, MATH 386, MATH 441.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "455", "instructor": "De Sturler, E", "description": "(C S 355) Introduction to numerical techniques for initial and boundary value problems in partial differential equations; includes finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of FORTRAN packages. Same as CSE 411, and MATH 455. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257; one of MATH 380, MATH 385, MATH 386, MATH 441.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "462", "instructor": "Vaidya, N", "description": "(C S 362) Same as ECE 462 and MATH 491. See ECE 462.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "473", "instructor": "Ramos, E", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "473", "instructor": "Ramos, E", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "473", "instructor": "Har-Peled, S", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "476", "instructor": "Meseguer, J", "description": "(C S 376) Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "476", "instructor": "Meseguer, J", "description": "(C S 376) Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "477", "instructor": "Viswanathan, M", "description": "Mathematical models, languages and methods for software specification, development and verification. Same as ECE 478. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "477", "instructor": "Viswanathan, M", "description": "Mathematical models, languages and methods for software specification, development and verification. Same as ECE 478. Prerequisite: CS 225 or CS 400; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "493", "instructor": "Johnson, R", "description": "(C S 293) Continuation of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations 3 undergraduate hours. Students must enroll for a two term sequence, CS 492 and CS 493. Credit is not given for both CS 493 and a project course in another engineering department for the same project. Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "494", "instructor": "Johnson, R", "description": "Same as CS 493 but without additional writing component. See CS 493. Students must enroll for a two-semester sequence, CS 492 and CS 494. Credit is not given for both CS 494 and a project course in another engineering department for the same project.  Prerequisite: CS 492.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Ahuja, N", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Gunter, C", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Hou, J", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Karahalios, K", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Pitt, L", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Woodley, M", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "511", "instructor": "Chang, K", "description": "(C S 411) The internal workings of database management systems: query interpretation, concurrency control, distribution, data buffering, schema management. Considers traditional database management systems and newer approaches. Presents and analyzes the course material in terms of a particular target application.  Prerequisite: CS 411. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "512", "instructor": "Han, J", "description": "(C S 412) Advanced course which introduces data mining concepts, principles and algorithms. Course will cover: introduction, data warehouse and OLAP technology for data mining, data preprocessing, primitives, languages, system architectures for data mining, concept description, association analysis, sequential pattern analysis, classification and prediction, cluster analysis, mining complex types of data, data mining applications and trends in data mining.  Prerequisite: CS 411 and CS 473.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "522", "instructor": "Rosu, G", "description": "(C S 422) Topics in the theory of programming languages including: functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics.  Prerequisite: CS 422 and CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "533", "instructor": "Torrellas, J", "description": "(C S 433)  Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; and overall computer system ideas. Same as CSE 522 and ECE 533.  Prerequisite: Consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "548", "instructor": "Dejong, G", "description": "(C S 448) Formal models and concepts in vision and language; detailed analysis of computer vision, language, and learning problems; relevant psychological results and linguistic systems; and survey of the state of the art in artificial intelligence. Same as ECE 548.  Prerequisite: CS 440.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "576", "instructor": "Gunter, E", "description": "(C S 476) Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. Prerequisite: Consent of instructor.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "579", "instructor": "Roman, M", "description": "(C S 479) Same as ECE 579 and MATH 578. See ECE 579.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Kravets, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Doan, A", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Adve, V", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Bailey, B", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Chang, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Roth, D", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Amir, E", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Ramos, E", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Garland, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Han, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Han, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Gupta, I", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Meseguer, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Torrellas, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Chang, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Karahalios, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Kale, L", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Heath, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Olson, L", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Kravets, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Johnson, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Campbell, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Har-Peled, S", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "591", "instructor": "Ray, S", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Gasser, L", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Bailey, B", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Schatz, B", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Zhai, C", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Forsyth, D", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Marinov, D", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Amir, E", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Nahrstedt, K", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Parthasarathy, M", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Johnson, R", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Gasser, L", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Spring 2005", "courseNumber": "598", "instructor": "Yu, Y", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "125", "instructor": "Parr, D", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "125", "instructor": "Parr, D", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "196", "instructor": "Gambill, T", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "196", "instructor": "Zych, J", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "225", "instructor": "Ivan, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "225", "instructor": "Ivan, A", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "231", "instructor": "Carlyle, J", "description": "(C S 231) Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "273", "instructor": "Bunde, D", "description": "(C S 273) Introduction to the various aspects of the theory of computation, including the necessary background in first order predicate logic, combinatorics, and recurrence relations; asymptotics; basics of algorithm analysis; NP- completeness; formal languages and automata.  Prerequisite: CS 125 and CS 173; or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "296", "instructor": "Zych, J", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "296", "instructor": "Carlyle, J", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "411", "instructor": "Doan, A", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "421", "instructor": "Harandi, M", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "421", "instructor": "Harandi, M", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "421", "instructor": "Harandi, M", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "450", "instructor": "Neradt, H", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "450", "instructor": "Neradt, H", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "498", "instructor": "Woodley, M", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Summer 2005", "courseNumber": "598", "instructor": "Johnson, R", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "100", "instructor": "Kamin, S", "description": "(C S 100) Introduction to Computer Science as a field and career for computer science majors. Overview of the field is presented along with specific examples of problem areas and methods of solution. Recommended for all freshman Computer Science majors.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Bengtson, E", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Belcher, M", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Belcher, M", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "101", "instructor": "Bengtson, E", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101 and either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Cranston, D", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Cranston, D", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Acharya, E", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "173", "instructor": "Heeren, C", "description": "(C S 173) Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "173", "instructor": "Heeren, C", "description": "(C S 173) Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "196", "instructor": "Gambill, T", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "196", "instructor": "Zych, J", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "196", "instructor": "Woodbury, M", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "196", "instructor": "Heeren, C", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course.  May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "199", "instructor": "Kamin, S", "description": "(C S 199) May be repeated.  ", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "199", "instructor": "Garnett, G", "description": "(C S 199) May be repeated.  ", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "210", "instructor": "Comertoglu, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "210", "instructor": "Comertoglu, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "210", "instructor": "Kumar, G", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "210", "instructor": "Kumar, G", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "225", "instructor": "Zych, J", "description": "Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125, ECE 190 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "231", "instructor": "Kale, L", "description": "(C S 231) Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "232", "instructor": "Torrellas, J", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "232", "instructor": "Torrellas, J", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "232", "instructor": "Torrellas, J", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "232", "instructor": "Torrellas, J", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "232", "instructor": "Torrellas, J", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "241", "instructor": "Bennett, A", "description": "Introduction to systems programming: This course will cover the basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools.  Prerequisite: CS 225; CS 231; credit or concurrent registration in CS 232.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "242", "instructor": "Woodley, M", "description": "Intensive programming lab intended to strengthen skills in programming.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "257", "instructor": "Neradt, H", "description": "(C S 257) Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines Same as MATH 257. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS or MATH 257. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "273", "instructor": "Lavalle, S", "description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; computability and the halting problem; undecidable problems; computational complexity and NP-completeness.  Prerequisite: CS 125 and either CS 173 or MATH 213.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "296", "instructor": "Zych, J", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "296", "instructor": "Kale, L", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "296", "instructor": "Torrellas, J", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "296", "instructor": "Neradt, H", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "400", "instructor": "Peiper, C", "description": "(C S 300) Course integrates software engineering principles with data structures implemented in C++. While prior experience with either C, C++ or Java is assumed, C++ will be taught in the first three weeks of the course. Software engineering will be covered in three stages: personal software process (checkpoints, project plans, defects and code reviews), prior to coding (process models, requirements and design) and after coding (testing and quality assurance techniques). The concepts, principles, and use of  data structures will include pointers, lists, arrays, sets, stacks, trees, hashing, graphs, priority queues and sorting. Special emphasis will be placed on the implementations of these structures in real-world applications Same as CSE 400. Credit is not given for both CS 400 and CS 225. Computer Science and Computer Engineering majors may not receive credit for CS 400. Prerequisite: CS 110 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "411", "instructor": "Chang, K", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "411", "instructor": "Chang, K", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations and applications.   3 undergraduate or graduate hours.  4 graduate hours.  Prerequisite: CS 225 or CS 500; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "412", "instructor": "Han, J", "description": "Introduction to the concepts, techniques, and systems of data warehousing and data mining, including (1) design and implementation of data warehouse and on-line analytical processing (OLAP) systems; and (2) data mining concepts, methods, systems, implementations and applications.   3 undergraduate or graduate hours.  4 graduate hours.  Prerequisite: CS 225 or CS 500; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "413", "instructor": "Hartke, S", "description": "(C S 313) Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "413", "instructor": "Hartke, S", "description": "(C S 313) Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "418", "instructor": "Garland, M", "description": "(C S 318) Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "418", "instructor": "Garland, M", "description": "(C S 318) Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "421", "instructor": "Gunter, E", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "421", "instructor": "Gunter, E", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "422", "instructor": "Rosu, G", "description": "(C S 322) Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "422", "instructor": "Rosu, G", "description": "(C S 322) Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "423", "instructor": "Nahrstedt, K", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "423", "instructor": "Gupta, I", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 241.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "425", "instructor": "Vaidya, N", "description": "(C S 328) Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424 and ECE 428.  Prerequisite: CS 241.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "426", "instructor": "Adve, V", "description": "(C S 326) Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "426", "instructor": "Adve, V", "description": "(C S 326) Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "427", "instructor": "Ellison, C", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "427", "instructor": "Ellison, C", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "431", "instructor": "Caccamo, M", "description": "Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 241 or CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "433", "instructor": "Adve, S", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "433", "instructor": "Adve, S", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "433", "instructor": "Harrison, W", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "435", "instructor": "Wong, M", "description": "(C S 335) Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "438", "instructor": "Kravets, R", "description": "(C S 338) Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to- point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438.  Prerequisite: CS 241; one of MATH 461, MATH 463, ECE 413.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "440", "instructor": "Dejong, G", "description": "(C S 348) Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "440", "instructor": "Dejong, G", "description": "(C S 348) Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "450", "instructor": "Bond, S", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "450", "instructor": "Bond, S", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  one of MATH 385, MATH 386,  MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "458", "instructor": "De Sturler, E", "description": "(C S 358) Direct and iterative methods for systems of linear equations; over determined systems of equations; eigenvalue problems; nonlinear systems of equations. Same as CSE 412 and MATH 458. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "458", "instructor": "De Sturler, E", "description": "(C S 358) Direct and iterative methods for systems of linear equations; over determined systems of equations; eigenvalue problems; nonlinear systems of equations. Same as CSE 412 and MATH 458. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "465", "instructor": "Bailey, B", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype.  Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation.   Same as LIS 465.  3 undergraduate  hours, 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "465", "instructor": "Bailey, B", "description": "This is a project-focused course that covers fundamental principles of user interface design, implementation, and evaluation.  Students work in small teams on a semester-long project that includes: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; and implementation of the final prototype.  Students from non-technical disciplines may enroll in the course as non-programmers who participate in all aspects of the projects with the possible exception of implementation.   Same as LIS 465.  3 undergraduate  hours, 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "473", "instructor": "Erickson, J", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "473", "instructor": "Erickson, J", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "473", "instructor": "Pitt, L", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "(C S 375) Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "475", "instructor": "Viswanathan, M", "description": "(C S 375) Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "476", "instructor": "Meseguer, J", "description": "(C S 376) Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "476", "instructor": "Meseguer, J", "description": "(C S 376) Examines formal methods for demonstrating correctness and other properties of programs; includes an overview of predicate calculus. Topics include: invariant assertions, Hoare axiomatics, well-founded orderings for proving termination, structural induction, computational induction, data structures, and parallel programs. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 273 or MATH 414.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "491", "instructor": "Heeren, C", "description": "(C S 391) Seminar course for advanced undergraduate and graduate students. Topics will vary. Approved for S/U grading only.  May be repeated to a maximum of 4 hours.  May be repeated if topics vary.  Prerequisite: Varies with course topic; consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "492", "instructor": "Johnson, R", "description": "(C S 292) First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. Students must enroll for a two term sequence, CS 492 and either CS 493 or CS 494. 3 undergraduate hours. Credit is not given for both CS 492 and a project course in another engineering department for the same project.  Prerequisite: Senior standing in CS or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Gunter, C", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Zhai, C", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Garzaran, M", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Amir, E", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Hou, J", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "498", "instructor": "Hinrichs, S", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "511", "instructor": "Doan, A", "description": "Advanced concepts in database management system design and implementation, and an introduction to the major recent developments in the field.  Topics include the relational roots, distributed and parallel databases, object databases and extensibility, semistructured data and XML, web research, benchmarks, and current directions in the field.   Prerequisite: CS 411.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "519", "instructor": "Hart, J", "description": "(C S 419) Detailed study of visualization techniques useful in analysis of engineering and scientific data. Topics include study of physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods;  visual monitoring; and interactive steering. Same as CSE 527.  Prerequisite: CS 418. ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "524", "instructor": "Agha, G", "description": "(C S 424) Introduction to the theory of concurrency and concurrent programming languages. Topics include formal models of concurrent computation such as process algebras, nets and actors; high level concurrent programming languages and their operational semantics; and methods for reasoning about correctness and complexity of concurrent programs.  Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "527", "instructor": "Adamczyk, P", "description": "(C S 427) Advanced topics in software engineering, including fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Course also includes a number of case studies Same as CSE 529.  Prerequisite: CS 428 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "541", "instructor": "Sanders, W", "description": "(C S 441) Development of analytical models of computer systems and application of such models to performance evaluation; topics include scheduling policies, paging algorithms, multiprogrammed resource management, and queuing theory. Same as CSE 524 and ECE 541.  Prerequisite: MATH 461 or MATH 463; ECE 413 or equivalent.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "543", "instructor": "Forsyth, D", "description": "(C S 443) Same as ECE 549. See ECE 549.  ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "545", "instructor": "Engelbrecht-Wiggans, R", "description": "(C S 445) Same as BADM 575. See BADM 575.  ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "571", "instructor": "West, D", "description": "(C S 471) Same as MATH 580. See MATH 580.  ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "575", "instructor": "Furedi, Z", "description": "(C S 475) Same as MATH 584. See MATH 584.  ", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "577", "instructor": "Sarwate, D", "description": "(C S 477) Same as ECE 556 and MATH 579. See ECE 556.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "578", "instructor": "Veeravalli, V", "description": "(C S 478) Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Adve, V", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Han, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Bailey, B", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Zilles, C", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Roth, D", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Rosu, G", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Han, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Erickson, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Gupta, I", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Erickson, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Meseguer, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Chang, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Karahalios, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Nahrstedt, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Kale, L", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Heath, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Winslett, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Harandi, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Johnson, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Campbell, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Gupta, I", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "591", "instructor": "Ray, S", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. Approved for both letter and S/U grading.  May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Hirani, A", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Zilles, C", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Marinov, D", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Roth, D", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Ramos, E", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Luo, H", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Karahalios, K", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Olson, L", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Prabhakaran, M", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Parthasarathy, M", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Twidale, M", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Har-Peled, S", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Gasser, L", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Sinha, S", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Abdelzaher, T", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2005", "term": "Fall 2005", "courseNumber": "598", "instructor": "Zhou, Y", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "100", "instructor": "Kamin, S", "description": "(C S 100) Introduction to Computer Science as a field and career for computer science majors. Overview of the field is presented along with specific examples of problem areas and methods of solution. Recommended for all freshman Computer Science majors.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Cheng, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Bengtson, E", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Cheng, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Bengtson, E", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "101", "instructor": "Gambill, T", "description": "(C S 101) Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Credit is not given for both CS 101, either CS 105 or CS 110 section C.  Prerequisite: MATH 220. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Colombi, A", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Colombi, A", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Davis, B", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Davis, B", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "105", "instructor": "Gambill, T", "description": "(C S 105) Introduction to computing as an essential tool of academic and professional activities in disciplines other than science and engineering. Functions and interrelationships of computer system components: hardware, systems and applications software, networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Students interested in Scientific and engineering applications of computing should take CS 101 instead of this course.  Prerequisite: MATH 012 or equivalent.  Credit is not given for both CS 105 and CS 101. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Zych, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Koomen, P", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Koomen, P", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Sundaresan, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Bashir, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Koomen, P", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Naisbitt, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Naisbitt, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Sundaresan, J", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Bashir, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "McGovern, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "McGovern, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "125", "instructor": "Bashir, A", "description": "(C S 125) First course for computer science majors and other students with a deep interest in computing. The course introduces students to basic concepts in computing and fundamental techniques for solving computational problems  Prerequisite: Three years of high school mathematics or MATH 012. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "173", "instructor": "Heeren, C", "description": "(C S 173) Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "2 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "173", "instructor": "Heeren, C", "description": "(C S 173) Studies discrete mathematical structures frequently encountered in the study of Computer Science. Topics will include sets, propositions, boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213.", "creditHrs": "2 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "196", "instructor": "Gambill, T", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "196", "instructor": "Zych, J", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "196", "instructor": "Woodbury, M", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "196", "instructor": "Heeren, C", "description": "(C S 196) Course is offered for honors credit in conjunction with other 100-level computer science courses, in which concurrent registration is required. Enrollment is strictly limited to beginning students with superior talents in computer science. A special examination may be required for admission to this course May be repeated.  Prerequisite: Concurrent registration in another 100-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "199", "instructor": "Kamin, S", "description": "(C S 199) May be repeated.  ", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "199", "instructor": "Pitt, L", "description": "(C S 199) May be repeated.  ", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "199", "instructor": "Woodbury, M", "description": "(C S 199) May be repeated.  ", "creditHrs": "1 TO 5 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "210", "instructor": "Woodbury, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "210", "instructor": "Woodbury, M", "description": "(C S 210) Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information and privacy. Students will be required to make oral presentations Credit is not given for both CS 210 and ECE 316. Prerequisite: CS 225 and junior standing.", "creditHrs": "2 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Zych, J", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Zych, J", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Ivan, A", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Klementiev, A", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Klementiev, A", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Klementiev, A", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Korula, N", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Wong, L", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Wong, L", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Ivan, A", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Wong, L", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "225", "instructor": "Korula, N", "description": "(C S 225) Data abstractions: elementary data structures: lists, stacks, queues, trees; searching and sorting techniques. Introduction to the principles of software engineering including term programming project.  Prerequisite: CS 125 or both CS 110 and junior standing; CS 173 or MATH 213; or consent of instructor. ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "231", "instructor": "Kale, L", "description": "(C S 231) Introduction to computer architecture, working up from the logic gate level: combinational and sequential networks; computer arithmetic; arithmetic/logic units; memory organization; control unit design. Credit is not given for both CS 231 and ECE 290. Prerequisite: CS 125.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Kinnersley, W", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Kinnersley, W", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Zilles, C", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Keller, S", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Keller, S", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Zimmerman, E", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "232", "instructor": "Zilles, C", "description": "(C S 232) Second-level course in computer architecture: machine-level programming, instruction sets, data representations; subroutines; input/output hardware and software; linking and loading; relation to high-level languages. Credit is not given for both CS 232 and ECE 390. (Counts for advanced hours in LAS). Prerequisite: CS  231. ", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "257", "instructor": "Kerkhoven, T", "description": "(C S 257) Introduction to numerical methods for students in science and engineering; topics include floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; discusses various applications in science and engineering; includes some programming as well as the use of high quality mathematical library routines Same as MATH 257. Students with earned credit in CS 450 or MATH 450 may not receive additional credit for CS or MATH 257. (Counts for advanced hours in LAS). Prerequisite: A 100-level computer science course; MATH 225 or MATH 415; MATH 243.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "273", "instructor": "Viswanathan, M", "description": "(C S 273) Introduction to the various aspects of the theory of computation, including the necessary background in first order predicate logic, combinatorics, and recurrence relations; asymptotics; basics of algorithm analysis; NP- completeness; formal languages and automata.  Prerequisite: CS 125 and CS 173; or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "296", "instructor": "Zych, J", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "296", "instructor": "Kale, L", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "296", "instructor": "Zilles, C", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "296", "instructor": "Kerkhoven, T", "description": "(C S 296) Group projects for honors work in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses, in which concurrent registration is required. A special examination may be required for admission to this course. May be repeated.  Prerequisite: Concurrent registration in another 200-level computer science course (see Schedule); or consent of instructor.", "creditHrs": "1 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "400", "instructor": "Peiper, C", "description": "(C S 300) Course integrates software engineering principles with data structures implemented in C++. While prior experience with either C, C++ or Java is assumed, C++ will be taught in the first three weeks of the course. Software engineering will be covered in three stages: personal software process (checkpoints, project plans, defects and code reviews), prior to coding (process models, requirements and design) and after coding (testing and quality assurance techniques). The concepts, principles, and use of  data structures will include pointers, lists, arrays, sets, stacks, trees, hashing, graphs, priority queues and sorting. Special emphasis will be placed on the implementations of these structures in real-world applications Same as CSE 400. Credit is not given for both CS 400 and CS 225. Computer Science and Computer Engineering majors may not receive credit for CS 400. Prerequisite: CS 110, or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "400", "instructor": "Peiper, C", "description": "(C S 300) Course integrates software engineering principles with data structures implemented in C++. While prior experience with either C, C++ or Java is assumed, C++ will be taught in the first three weeks of the course. Software engineering will be covered in three stages: personal software process (checkpoints, project plans, defects and code reviews), prior to coding (process models, requirements and design) and after coding (testing and quality assurance techniques). The concepts, principles, and use of  data structures will include pointers, lists, arrays, sets, stacks, trees, hashing, graphs, priority queues and sorting. Special emphasis will be placed on the implementations of these structures in real-world applications Same as CSE 400. Credit is not given for both CS 400 and CS 225. Computer Science and Computer Engineering majors may not receive credit for CS 400. Prerequisite: CS 110, or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "400", "instructor": "Peiper, C", "description": "(C S 300) Course integrates software engineering principles with data structures implemented in C++. While prior experience with either C, C++ or Java is assumed, C++ will be taught in the first three weeks of the course. Software engineering will be covered in three stages: personal software process (checkpoints, project plans, defects and code reviews), prior to coding (process models, requirements and design) and after coding (testing and quality assurance techniques). The concepts, principles, and use of  data structures will include pointers, lists, arrays, sets, stacks, trees, hashing, graphs, priority queues and sorting. Special emphasis will be placed on the implementations of these structures in real-world applications Same as CSE 400. Credit is not given for both CS 400 and CS 225. Computer Science and Computer Engineering majors may not receive credit for CS 400. Prerequisite: CS 110, or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "411", "instructor": "Chang, K", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "411", "instructor": "Chang, K", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "411", "instructor": "Chang, K", "description": "(C S 311) Examines the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "413", "instructor": "Boylan, M", "description": "(C S 313) Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "413", "instructor": "Boylan, M", "description": "(C S 313) Same as MATH 413. See MATH 413.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "418", "instructor": "Yu, Y", "description": "(C S 318) Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "418", "instructor": "Yu, Y", "description": "(C S 318) Introduction to basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or CS 400; MATH 225 or MATH 415; MATH 242 or MATH 243.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "421", "instructor": "Adve, V", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "421", "instructor": "Adve, V", "description": "(C S 321) Introduction to the structure of programming languages and their implementation. Basic language design principles; abstract data types;  functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis and code generation. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225, and CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "422", "instructor": "Rosu, G", "description": "(C S 322) Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "422", "instructor": "Rosu, G", "description": "(C S 322) Advanced course in principles of language design. Using imperative and functional programming as unifying themes, major language design paradigms will be explored. Tools in this study will include both practical language processor construction and theoretical models. Emphasis will be on reasoning about programs and languages. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 421.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "423", "instructor": "Monroe, B", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "423", "instructor": "Monroe, B", "description": "(C S 323) The organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225; CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "425", "instructor": "Wah, B", "description": "(C S 328) Covers topics needed for a basic understanding of distributed computer systems: Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as CSE 424, and ECE 428.  Prerequisite: CS 423, or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "427", "instructor": "Dig, D", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "427", "instructor": "Dig, D", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "427", "instructor": "Johnson, R", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "427", "instructor": "Dig, D", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "427", "instructor": "Dig, D", "description": "(C S 327) Software process, analysis and design. Topics include: software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Donkervoet, W", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Cheema, A", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Jamall, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Donkervoet, W", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Donkervoet, W", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Jamall, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Cheema, A", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Jamall, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Caccamo, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Caccamo, M", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Sha, L", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "431", "instructor": "Sha, L", "description": "(C S 331) Survey of sampled data systems and embedded architecture; overview of the key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications, real-time operating systems and techniques for the development and analysis of embedded real-time software. Hands-on laboratory projects. 3 undergraduate hours only. 3 or 4 graduate hours only.  Prerequisite: CS 232 or ECE 390; CS 423. ", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "433", "instructor": "Torrellas, J", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "433", "instructor": "Adve, S", "description": "(C S 333) Computer system analysis and design. Organizational dependence on computations to be performed. Speed and cost of parts and overall machines. Instruction set design. Pipeline and vector machines. Memory hierarchy design. Same as CSE 422. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 232 or ECE 390.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "435", "instructor": "Wong, M", "description": "(C S 335) Same as CSE 433 and ECE 425. See ECE 425.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "438", "instructor": "Hou, J", "description": "(C S 338) Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to- point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as CSE 425 and ECE 438.  Prerequisite: CS 231 or ECE 290; one of  MATH 461 or MATH 463 or ECE 413.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "440", "instructor": "Dejong, G", "description": "(C S 348) Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "440", "instructor": "Dejong, G", "description": "(C S 348) Introductory description of the major subjects and directions of research in artificial intelligence; topics include AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 or ECE 390; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "450", "instructor": "Heath, M", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  MATH 385, MATH 386, or MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "450", "instructor": "Heath, M", "description": "(C S 350) Introduction to numerical analysis, including linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 101 or CS 125; CS 257 or MATH 415;  MATH 385, MATH 386, or MATH 441; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "458", "instructor": "De Sturler, E", "description": "(C S 358) Direct and iterative methods for systems of linear equations; over determined systems of equations; eigenvalue problems; nonlinear systems of equations. Same as CSE 412 and MATH 458. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "458", "instructor": "De Sturler, E", "description": "(C S 358) Direct and iterative methods for systems of linear equations; over determined systems of equations; eigenvalue problems; nonlinear systems of equations. Same as CSE 412 and MATH 458. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 257 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "473", "instructor": "Ramos, E", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "473", "instructor": "Ramos, E", "description": "(C S 373) Advanced data structures, graph algorithms, arithmetic algorithms, geometric algorithms, string problems, parallel algorithms, NP-completeness. Same as CSE 414 and MATH 473. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 225 and CS 273; or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "475", "instructor": "Pitt, L", "description": "(C S 375) Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "475", "instructor": "Pitt, L", "description": "(C S 375) Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "475", "instructor": "Pitt, L", "description": "(C S 375) Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours.  Prerequisite: CS 273 or consent of instructor.", "creditHrs": "3 OR 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "491", "instructor": "Campbell, R", "description": "(C S 391) Seminar course for advanced undergraduate and graduate students. Topics will vary. May be repeated to a maximum of 4 hours.  May be repeated if topics vary.  Prerequisite: Varies with course topic; consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "492", "instructor": "Johnson, R", "description": "(C S 292) First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. Students must enroll for a two term sequence, CS 492 and CS 493. 3 undergraduate hours. Credit is not given for both CS 492 and a project course in another engineering department for the same project.  Prerequisite: Senior standing in CS or consent of instructor.", "creditHrs": "3 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Kamin, S", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Kamin, S", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Doan, A", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Kamin, S", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Bailey, B", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Zhai, C", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Forsyth, D", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Amir, E", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Gunter, E", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Garnett, G", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Han, J", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Naldurg, P", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Campbell, R", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Naldurg, P", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "498", "instructor": "Harrison, W", "description": "(C S 397) Lectures in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "523", "instructor": "Campbell, R", "description": "(C S 423) Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Topics include: process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. Same as CSE 523.  Prerequisite: CS 423, CS 425, and CS 433; or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "524", "instructor": "Agha, G", "description": "(C S 424) Introduction to the theory of concurrency and concurrent programming languages. Topics include formal models of concurrent computation such as process algebras, nets and actors; high level concurrent programming languages and their operational semantics; and methods for reasoning about correctness and complexity of concurrent programs.  Prerequisite: CS 422; CS 475 or CS 476.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "526", "instructor": "Padua, D", "description": "(C S 426) Advanced topics in compiler construction, including incremental and interactive compiling, error correction, code optimization, models of code generators, etc. Same as CSE 526.  Prerequisite: CS 426.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "527", "instructor": "Johnson, R", "description": "(C S 427) Advanced topics in software engineering, including fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Course also includes a number of case studies Same as CSE 529.  Prerequisite: CS 428 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "527", "instructor": "Johnson, R", "description": "(C S 427) Advanced topics in software engineering, including fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Course also includes a number of case studies Same as CSE 529.  Prerequisite: CS 428 or consent of instructor.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "541", "instructor": "Sanders, W", "description": "(C S 441) Development of analytical models of computer systems and application of such models to performance evaluation; topics include scheduling policies, paging algorithms, multiprogrammed resource management, and queuing theory. Same as CSE 524 and ECE 541.  Prerequisite: MATH 461 or MATH 463; ECE 413 or equivalent.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "543", "instructor": "Ponce, J", "description": "(C S 443) Same as ECE 549. See ECE 549.  ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "545", "instructor": "Engelbrecht-Wiggans, R", "description": "(C S 445) Same as BADM 575. See BADM 575.  ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "571", "instructor": "West, D", "description": "(C S 471) Same as MATH 580. See MATH 580.  ", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "577", "instructor": "Sarwate, D", "description": "(C S 477) Same as ECE 556 and MATH 579. See ECE 556.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "578", "instructor": "Viswanath, P", "description": "(C S 478) Same as ECE 563 and STAT 563. See ECE 563.", "creditHrs": "4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Doan, A", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Adve, V", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Bailey, B", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Campbell, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Zhai, C", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Zilles, C", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Chang, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Roth, D", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Amir, E", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Ramos, E", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Agha, G", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Garland, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Han, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Hart, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Torrellas, J", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Chang, K", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Kale, L", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Heath, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Winslett, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Viswanathan, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Harandi, M", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Johnson, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Campbell, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Kravets, R", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Har-Peled, S", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "591", "instructor": "Ray, S", "description": "(C S 491) Seminar on topics of current interest. Subjects will be announced in the Schedule. May be repeated in the same or subsequent terms as topics vary. Prerequisite: Consent of instructor.", "creditHrs": "0 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Gunter, C", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Roth, D", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Luo, H", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Gupta, I", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Hart, J", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Karahalios, K", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Garland, M", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Kravets, R", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Twidale, M", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Bond, S", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Har-Peled, S", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Ray, S", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}, {"calendarYear": "2004", "term": "Fall 2004", "courseNumber": "598", "instructor": "Zhou, Y", "description": "(C S 497) Lecture course in topics of current interest. See Schedule for current topics. May be repeated.  Prerequisite: As specified for each topic offering, see Schedule or departmental course description.", "creditHrs": "2 TO 4 hours."}]