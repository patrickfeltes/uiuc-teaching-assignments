{"version":3,"sources":["components/InstructorTable.js","components/CourseTable.js","components/Tab.js","components/Tabs.js","components/ButtonLoader.js","components/RecommendationPage.js","components/CourseSearchPage.js","App.js","index.js"],"names":["BASE_URL","instructorService","payload","fetch","then","response","json","instructor","method","headers","body","JSON","stringify","data","instructorID","styles","container","margin","width","InstructorTable","style","caption","fetchItems","name","label","hideInCreateForm","hideInUpdateForm","title","message","trigger","onSubmit","task","submitText","validate","values","courseService","course","courseID","CourseTable","Tab","onClick","props","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","state","children","map","child","key","ButtonLoader","loading","fetchData","disabled","marginRight","JsonTable","require","RecommendationPage","handleChange","newValue","taughtCourses","relatedInstructors","attributes","recommendedCourses","options","mappedData","val","value","onChange","rows","CourseSearchPage","professors","relatedCourses","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2102e3a0.chunk.js","sourcesContent":["import React from \"react\";\nimport CRUDTable,\n{\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n} from 'react-crud-table';\n \nconst BASE_URL = 'https://cs411-server.herokuapp.com';\n\nconst instructorService = {\n  fetchItems: (payload) => {\n    return fetch('/instructor').then(response => {\n      return response.json();\n    });\n  },\n  create: (instructor) => {\n    return fetch(BASE_URL + '/instructor', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(instructor)\n    });\n  },\n  update: (instructor) => {\n    return fetch(BASE_URL + '/instructor', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(instructor)\n    });\n  },\n  delete: (data) => {\n    return fetch(BASE_URL + '/instructor/' + data.instructorID, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n};\n \nconst styles = {\n  container: { margin: 'auto', width: 'fit-content' },\n};\n \nconst InstructorTable = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"Instructors\"\n      fetchItems={payload => instructorService.fetchItems(payload)}\n    >\n      <Fields>\n        <Field\n          name=\"instructorID\"\n          label=\"instructorID\"\n          hideInCreateForm\n          hideInUpdateForm\n        />\n        <Field\n          name=\"name\"\n          label=\"name\"\n        />\n      </Fields>\n      <CreateForm\n        title=\"Instructor Creation\"\n        message=\"Create a new instructor!\"\n        trigger=\"Create Instructor\"\n        onSubmit={task => instructorService.create(task)}\n        submitText=\"Create\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <UpdateForm\n        title=\"Instructor Update Process\"\n        message=\"Update instructor\"\n        trigger=\"Update\"\n        onSubmit={task => instructorService.update(task)}\n        submitText=\"Update\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <DeleteForm\n        title=\"Instructor Delete Process\"\n        message=\"Are you sure you want to delete the instructor?\"\n        trigger=\"Delete\"\n        onSubmit={task => instructorService.delete(task)}\n        submitText=\"Delete\"\n        validate={(values) => {\n          const errors = {};\n          \n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\n\nInstructorTable.propTypes = {};\n\nexport default InstructorTable;\n","import React from \"react\";\nimport CRUDTable,\n{\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n} from 'react-crud-table';\n \nconst courseService = {\n  fetchItems: (payload) => {\n    return fetch('/course').then(response => {\n      return response.json();\n    });\n  },\n  create: (course) => {\n    return fetch('/course', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(course)\n    });\n  },\n  update: (course) => {\n    return fetch('/course', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(course)\n    });\n  },\n  delete: (data) => {\n    return fetch('/course/' + data.courseID, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n};\n \nconst styles = {\n  container: { margin: 'auto', width: 'fit-content' },\n};\n \nconst CourseTable = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"course\"\n      fetchItems={payload => courseService.fetchItems(payload)}\n    >\n      <Fields>\n        <Field\n          name=\"courseID\"\n          label=\"courseID\"\n          hideInCreateForm\n          hideInUpdateForm\n        />\n        <Field\n          name=\"courseNumber\"\n          label=\"courseNumber\"\n        />\n        <Field\n          name=\"description\"\n          label=\"description\"\n        />\n        <Field\n          name=\"creditHours\"\n          label=\"creditHours\"\n        />\n      </Fields>\n      <CreateForm\n        title=\"Course Creation\"\n        message=\"Create a new course!\"\n        trigger=\"Create course\"\n        onSubmit={task => courseService.create(task)}\n        submitText=\"Create\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <UpdateForm\n        title=\"Course Update Process\"\n        message=\"Update course\"\n        trigger=\"Update\"\n        onSubmit={task => courseService.update(task)}\n        submitText=\"Update\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <DeleteForm\n        title=\"Course Delete Process\"\n        message=\"Are you sure you want to delete the course?\"\n        trigger=\"Delete\"\n        onSubmit={task => courseService.delete(task)}\n        submitText=\"Delete\"\n        validate={(values) => {\n          const errors = {};\n          \n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\n\nCourseTable.propTypes = {};\n\nexport default CourseTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const { \n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li \n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { Component } from \"react\";\n\nexport default class ButtonLoader extends Component {\n  state = {\n    loading: false\n  };\n\n  fetchData = () => {\n    this.setState({ loading: true });\n\n    fetch('/update_similarities').then(response => {\n        this.setState( { loading: false });\n    });\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n        <button className=\"loading-button\" onClick={this.fetchData} disabled={loading}>\n            {loading && (\n            <i\n                className=\"fa fa-refresh fa-spin\"\n                style={{ marginRight: \"5px\" }}\n            />\n            )}\n            {loading && <span>Refreshing Course Similarities (about 10 s)</span>}\n            {!loading && <span>Refresh Course Similarities (If you added courses or changed descriptions).</span>}\n        </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport ButtonLoader from './ButtonLoader';\nconst JsonTable = require('ts-react-json-table');\n\nexport default class RecommendationPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: null,\n            attributes: null,\n            taughtCourses: null,\n            relatedInstructors: null,\n            recommendedCourses: null,\n        };\n    }\n\n    handleChange = (newValue) => {\n        const instructorID = newValue[\"value\"];\n\n        fetch('/course?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ taughtCourses: data });\n            });\n        });\n\n        fetch('/related_instructor?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ relatedInstructors: data });\n            });\n        });\n\n        fetch('/instructor?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ attributes: data });\n            });\n        });\n\n        fetch('/get_recommended_courses?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ recommendedCourses: data });\n            });\n        });\n    };\n\n    componentWillMount() {\n        fetch('/instructor').then(response => {\n            response.json().then(data => {\n                var mappedData = data.map((val) => { return { label: val[\"name\"], value: val[\"instructorID\"]} });\n                this.setState({ options: mappedData });\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <ButtonLoader />\n                {this.state.options ? <Select options={this.state.options} onChange={this.handleChange} /> : <div></div>}\n                <h1>Professor Information</h1>\n                {this.state.attributes ? <JsonTable rows={this.state.attributes} /> : <div />}\n                <h1>Taught Courses</h1>\n                {this.state.taughtCourses ? <JsonTable rows={this.state.taughtCourses} /> : <div />}\n                <h1>Recommended Courses</h1>\n                {this.state.recommendedCourses ? <JsonTable rows={this.state.recommendedCourses} /> : <div />}\n                <h1>Instructors who also taught these courses</h1>\n                {this.state.relatedInstructors ? <JsonTable rows={this.state.relatedInstructors} /> : <div />}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport ButtonLoader from './ButtonLoader';\r\nconst JsonTable = require('ts-react-json-table');\r\n\r\nexport default class CourseSearchPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: null,\r\n            attributes: null,\r\n            professors: null,\r\n            relatedCourses: null\r\n        };\r\n    }\r\n\r\n    handleChange = (newValue) => {\r\n        const courseID = newValue[\"value\"];\r\n\r\n        fetch('/get_instructors_who_taught_this_course?course_id=' + courseID).then(response => {\r\n            response.json().then(data => {\r\n                this.setState({ professors: data });\r\n            });\r\n        });\r\n\r\n        fetch('/get_courses_related_to_this_one?course_id=' + courseID).then(response => {\r\n            response.json().then(data => {\r\n                this.setState({ relatedCourses: data });\r\n            });\r\n        });\r\n\r\n        fetch('/attributes_of_course?course_id=' + courseID).then(response => {\r\n            response.json().then(data => {\r\n                this.setState({ attributes: data });\r\n            });\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        fetch('/course').then(response => {\r\n            response.json().then(data => {\r\n                var mappedData = data.map((val) => { return { label: val[\"courseNumber\"], value: val[\"courseID\"]} });\r\n                this.setState({ options: mappedData });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.options ? <Select options={this.state.options} onChange={this.handleChange} /> : <div></div>}\r\n                <h1>Course Information</h1>\r\n                {this.state.attributes ? <JsonTable rows={this.state.attributes} /> : <div />}\r\n                <h1>Professors who taught this course</h1>\r\n                {this.state.professors ? <JsonTable rows={this.state.professors} /> : <div />}\r\n                <h1>Courses also taught by these instructors</h1>\r\n                {this.state.relatedCourses ? <JsonTable rows={this.state.relatedCourses} /> : <div />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport InstructorTable from './components/InstructorTable'\nimport AssignmentTable from './components/AssignmentTable'\nimport CourseTable from './components/CourseTable'\nimport RelatedInstructorTable from './components/RelatedInstructorTable';\nimport Tabs from './components/Tabs';\n\nimport './index.css'\nimport RecommendationPage from './components/RecommendationPage';\nimport CourseSearchPage from './components/CourseSearchPage';\n\nconst App = () => (\n  <div>\n    <Tabs>\n      <div label=\"Instructors\">\n        <InstructorTable />\n      </div>\n\n      <div label=\"Courses\">\n        <CourseTable />\n      </div>\n\n      <div label=\"Recommendation\">\n        <RecommendationPage />\n      </div>\n\n      <div label=\"Course Search\">\n        <CourseSearchPage />\n      </div>\n    </Tabs>\n  </div>\n);\n\nApp.propTypes = {};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}