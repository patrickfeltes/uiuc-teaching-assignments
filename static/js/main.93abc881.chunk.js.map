{"version":3,"sources":["components/InstructorTable.js","components/AssignmentTable.js","components/CourseTable.js","components/RelatedInstructorTable.js","components/Tab.js","components/Tabs.js","components/ButtonLoader.js","components/RecommendationPage.js","components/CourseSearchPage.js","App.js","index.js"],"names":["BASE_URL","instructorService","payload","fetch","then","response","json","instructor","method","headers","body","JSON","stringify","data","instructorID","styles","container","margin","width","InstructorTable","style","caption","fetchItems","name","label","hideInCreateForm","hideInUpdateForm","title","message","trigger","onSubmit","task","submitText","validate","values","assignmentService","assignment","assignmentID","AssignmentTable","courseService","course","courseID","CourseTable","relatedInstructorService","relatedID","RelatedInstructorTable","Tab","onClick","props","this","activeTab","className","Component","Tabs","onClickTabItem","tab","setState","state","children","map","child","key","ButtonLoader","loading","fetchData","disabled","marginRight","JsonTable","require","RecommendationPage","handleChange","newValue","taughtCourses","relatedInstructors","attributes","recommendedCourses","options","mappedData","val","value","onChange","rows","CourseSearchPage","professors","relatedCourses","App","ReactDOM","render","document","getElementById"],"mappings":"wNAUMA,EAAW,qCAEXC,EACQ,SAACC,GACX,OAAOC,MAAMH,EAAW,eAAeI,MAAK,SAAAC,GAC1C,OAAOA,EAASC,WAHhBL,EAMI,SAACM,GACP,OAAOJ,MAAMH,EAAW,cAAe,CACrCQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,MAbrBN,EAgBI,SAACM,GACP,OAAOJ,MAAMH,EAAW,cAAe,CACrCQ,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,MAvBrBN,EA0BI,SAACY,GACP,OAAOV,MAAMH,EAAW,eAAiBa,EAAKC,aAAc,CAC1DN,OAAQ,SACRC,QAAS,CACP,OAAU,mBACV,eAAgB,uBAMlBM,EAAS,CACbC,UAAW,CAAEC,OAAQ,OAAQC,MAAO,gBAiEvBC,EA9DS,kBACtB,yBAAKC,MAAOL,EAAOC,WACjB,kBAAC,IAAD,CACEK,QAAQ,cACRC,WAAY,SAAApB,GAAO,OAAID,EAA6BC,KAEpD,kBAAC,SAAD,KACE,kBAAC,QAAD,CACEqB,KAAK,eACLC,MAAM,eACNC,kBAAgB,EAChBC,kBAAgB,IAElB,kBAAC,QAAD,CACEH,KAAK,OACLC,MAAM,UAGV,kBAAC,aAAD,CACEG,MAAM,sBACNC,QAAQ,2BACRC,QAAQ,oBACRC,SAAU,SAAAC,GAAI,OAAI9B,EAAyB8B,IAC3CC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,4BACNC,QAAQ,oBACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAI9B,EAAyB8B,IAC3CC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,4BACNC,QAAQ,kDACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAI9B,EAAyB8B,IAC3CC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,SC7FnBC,EACQ,SAACjC,GACX,OAAOC,MAAMH,iDAA0BI,MAAK,SAAAC,GAC1C,OAAOA,EAASC,WAHhB6B,EAMI,SAACC,GACP,OAAOjC,MAAMH,gDAA0B,CACrCQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUwB,MAbrBD,EAgBI,SAACC,GACP,OAAOjC,MAAMH,gDAA0B,CACrCQ,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUwB,MAvBrBD,EA0BI,SAACtB,GACP,OAAOV,MAAMH,iDAA4Ba,EAAKwB,aAAc,CAC1D7B,OAAQ,SACRC,QAAS,CACP,OAAU,mBACV,eAAgB,uBAMlBM,EAAS,CACbC,UAAW,CAAEC,OAAQ,OAAQC,MAAO,gBA6EvBoB,EA1ES,kBACtB,yBAAKlB,MAAOL,EAAOC,WACjB,kBAAC,IAAD,CACEK,QAAQ,cACRC,WAAY,SAAApB,GAAO,OAAIiC,EAA6BjC,KAEpD,kBAAC,SAAD,KACE,kBAAC,QAAD,CACEqB,KAAK,eACLC,MAAM,kBACNC,kBAAgB,EAChBC,kBAAgB,IAElB,kBAAC,QAAD,CACEH,KAAK,WACLC,MAAM,aAER,kBAAC,QAAD,CACED,KAAK,eACLC,MAAM,iBAER,kBAAC,QAAD,CACED,KAAK,WACLC,MAAM,aAER,kBAAC,QAAD,CACED,KAAK,eACLC,MAAM,kBAGV,kBAAC,aAAD,CACEG,MAAM,sBACNC,QAAQ,2BACRC,QAAQ,oBACRC,SAAU,SAAAC,GAAI,OAAII,EAAyBJ,IAC3CC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,4BACNC,QAAQ,oBACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAII,EAAyBJ,IAC3CC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,4BACNC,QAAQ,kDACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAII,EAAyBJ,IAC3CC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,SC1GnBlC,EAAW,qCAEXuC,EACQ,SAACrC,GACX,OAAOC,MAAMH,EAAW,WAAWI,MAAK,SAAAC,GACtC,OAAOA,EAASC,WAHhBiC,EAMI,SAACC,GACP,OAAOrC,MAAMH,EAAW,UAAW,CACjCQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU4B,MAbrBD,EAgBI,SAACC,GACP,OAAOrC,MAAMH,EAAW,UAAW,CACjCQ,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU4B,MAvBrBD,EA0BI,SAAC1B,GACP,OAAOV,MAAMH,EAAW,WAAaa,EAAK4B,SAAU,CAClDjC,OAAQ,SACRC,QAAS,CACP,OAAU,mBACV,eAAgB,uBAMlBM,EAAS,CACbC,UAAW,CAAEC,OAAQ,OAAQC,MAAO,gBAyEvBwB,EAtEK,kBAClB,yBAAKtB,MAAOL,EAAOC,WACjB,kBAAC,IAAD,CACEK,QAAQ,SACRC,WAAY,SAAApB,GAAO,OAAIqC,EAAyBrC,KAEhD,kBAAC,SAAD,KACE,kBAAC,QAAD,CACEqB,KAAK,WACLC,MAAM,WACNC,kBAAgB,EAChBC,kBAAgB,IAElB,kBAAC,QAAD,CACEH,KAAK,eACLC,MAAM,iBAER,kBAAC,QAAD,CACED,KAAK,cACLC,MAAM,gBAER,kBAAC,QAAD,CACED,KAAK,cACLC,MAAM,iBAGV,kBAAC,aAAD,CACEG,MAAM,kBACNC,QAAQ,uBACRC,QAAQ,gBACRC,SAAU,SAAAC,GAAI,OAAIQ,EAAqBR,IACvCC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,wBACNC,QAAQ,gBACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAIQ,EAAqBR,IACvCC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,wBACNC,QAAQ,8CACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAIQ,EAAqBR,IACvCC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,SCpGnBS,EACQ,SAACzC,GACX,OAAOC,MAAMH,yDAAkCI,MAAK,SAAAC,GAClD,OAAOA,EAASC,WAHhBqC,EAMI,SAACP,GACP,OAAOjC,MAAMH,wDAAkC,CAC7CQ,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUwB,MAbrBO,EAgBI,SAACP,GACP,OAAOjC,MAAMH,wDAAkC,CAC7CQ,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUwB,MAvBrBO,EA0BI,SAAC9B,GACP,OAAOV,MAAMH,yDAAoCa,EAAK+B,UAAW,CAC/DpC,OAAQ,SACRC,QAAS,CACP,OAAU,mBACV,eAAgB,uBAMlBM,EAAS,CACbC,UAAW,CAAEC,OAAQ,OAAQC,MAAO,gBAqEvB2B,EAlEgB,kBAC7B,yBAAKzB,MAAOL,EAAOC,WACjB,kBAAC,IAAD,CACEK,QAAQ,sBACRC,WAAY,SAAApB,GAAO,OAAIyC,EAAoCzC,KAE3D,kBAAC,SAAD,KACE,kBAAC,QAAD,CACEqB,KAAK,YACLC,MAAM,yBACNC,kBAAgB,EAChBC,kBAAgB,IAElB,kBAAC,QAAD,CACEH,KAAK,uBACLC,MAAM,yBAER,kBAAC,QAAD,CACED,KAAK,uBACLC,MAAM,0BAGV,kBAAC,aAAD,CACEG,MAAM,8BACNC,QAAQ,oCACRC,QAAQ,kBACRC,SAAU,SAAAC,GAAI,OAAIY,EAAgCZ,IAClDC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,qCACNC,QAAQ,6BACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAIY,EAAgCZ,IAClDC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,MAMnB,kBAAC,aAAD,CACEP,MAAM,qCACNC,QAAQ,kDACRC,QAAQ,SACRC,SAAU,SAAAC,GAAI,OAAIY,EAAgCZ,IAClDC,WAAW,SACXC,SAAU,SAACC,GAGT,MAFe,S,mCCjEVY,E,2MAhCbC,QAAU,WAAO,IAAD,EACa,EAAKC,MAAxBxB,EADM,EACNA,OACRuB,EAFc,EACCA,SACPvB,I,wEAGA,IAENuB,EAKEE,KALFF,QAFK,EAOHE,KAJFD,MACEE,EAJG,EAIHA,UACA1B,EALG,EAKHA,MAIA2B,EAAY,gBAMhB,OAJID,IAAc1B,IAChB2B,GAAa,oBAIb,wBACEA,UAAWA,EACXJ,QAASA,GAERvB,O,GAhCS4B,aCyDHC,E,YAlDb,WAAYL,GAAQ,IAAD,8BACjB,4CAAMA,KAORM,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEN,UAAWK,KAN3B,EAAKE,MAAQ,CACXP,UAAW,EAAKF,MAAMU,SAAS,GAAGV,MAAMxB,OAJzB,E,sEAYT,IAEN8B,EAOEL,KAPFK,eAEEI,EAKAT,KANFD,MACEU,SAGAR,EAEAD,KAHFQ,MACEP,UAIJ,OACE,yBAAKC,UAAU,QACb,wBAAIA,UAAU,YACXO,EAASC,KAAI,SAACC,GAAW,IAChBpC,EAAUoC,EAAMZ,MAAhBxB,MAER,OACE,kBAAC,EAAD,CACE0B,UAAWA,EACXW,IAAKrC,EACLA,MAAOA,EACPuB,QAASO,QAKjB,yBAAKH,UAAU,eACZO,EAASC,KAAI,SAACC,GACb,GAAIA,EAAMZ,MAAMxB,QAAU0B,EAC1B,OAAOU,EAAMZ,MAAMU,kB,GA/CZN,a,QCFEU,E,2MACnBL,MAAQ,CACNM,SAAS,G,EAGXC,UAAY,WACV,EAAKR,SAAS,CAAEO,SAAS,IAEzB5D,MAAMH,0DAAmCI,MAAK,SAAAC,GAC1C,EAAKmD,SAAU,CAAEO,SAAS,Q,wEAItB,IACAA,EAAYd,KAAKQ,MAAjBM,QAER,OACI,4BAAQZ,UAAU,iBAAiBJ,QAASE,KAAKe,UAAWC,SAAUF,GACjEA,GACD,uBACIZ,UAAU,wBACV/B,MAAO,CAAE8C,YAAa,SAGzBH,GAAW,8EACVA,GAAW,kH,GAzBiBX,aCApCe,EAAYC,EAAQ,IAGLC,E,YAEjB,WAAYrB,GAAQ,IAAD,8BACf,4CAAMA,KAWVsB,aAAe,SAACC,GACZ,IAAMzD,EAAeyD,EAAQ,MAE7BpE,MAAMH,2DAAsCc,GAAcV,MAAK,SAAAC,GAC3DA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAEgB,cAAe3D,UAIvCV,MAAMH,uEAAkDc,GAAcV,MAAK,SAAAC,GACvEA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAEiB,mBAAoB5D,UAI5CV,MAAMH,+DAA0Cc,GAAcV,MAAK,SAAAC,GAC/DA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAEkB,WAAY7D,UAIpCV,MAAMH,4EAAuDc,GAAcV,MAAK,SAAAC,GAC5EA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAEmB,mBAAoB9D,WAhC5C,EAAK4C,MAAQ,CACTmB,QAAS,KACTF,WAAY,KACZF,cAAe,KACfC,mBAAoB,KACpBE,mBAAoB,MART,E,kFAwCG,IAAD,OACjBxE,MAAMH,iDAA0BI,MAAK,SAAAC,GACjCA,EAASC,OAAOF,MAAK,SAAAS,GACjB,IAAIgE,EAAahE,EAAK8C,KAAI,SAACmB,GAAU,MAAO,CAAEtD,MAAOsD,EAAG,KAAUC,MAAOD,EAAG,iBAC5E,EAAKtB,SAAS,CAAEoB,QAASC,Y,+BAMjC,OACI,yBAAK1B,UAAU,aACX,kBAAC,EAAD,MACCF,KAAKQ,MAAMmB,QAAU,kBAAC,IAAD,CAAQA,QAAS3B,KAAKQ,MAAMmB,QAASI,SAAU/B,KAAKqB,eAAmB,8BAC7F,qDACCrB,KAAKQ,MAAMiB,WAAa,kBAACP,EAAD,CAAWc,KAAMhC,KAAKQ,MAAMiB,aAAiB,8BACtE,8CACCzB,KAAKQ,MAAMe,cAAgB,kBAACL,EAAD,CAAWc,KAAMhC,KAAKQ,MAAMe,gBAAoB,8BAC5E,mDACCvB,KAAKQ,MAAMkB,mBAAqB,kBAACR,EAAD,CAAWc,KAAMhC,KAAKQ,MAAMkB,qBAAyB,8BACtF,yEACC1B,KAAKQ,MAAMgB,mBAAqB,kBAACN,EAAD,CAAWc,KAAMhC,KAAKQ,MAAMgB,qBAAyB,mC,GA/DtDrB,aCH1Ce,EAAYC,EAAQ,IAGLc,E,YAEjB,WAAYlC,GAAQ,IAAD,8BACf,4CAAMA,KAUVsB,aAAe,SAACC,GACZ,IAAM9B,EAAW8B,EAAQ,MAEzBpE,MAAMH,uFAAkEyC,GAAUrC,MAAK,SAAAC,GACnFA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAE2B,WAAYtE,UAIpCV,MAAMH,gFAA2DyC,GAAUrC,MAAK,SAAAC,GAC5EA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAE4B,eAAgBvE,UAIxCV,MAAMH,qEAAgDyC,GAAUrC,MAAK,SAAAC,GACjEA,EAASC,OAAOF,MAAK,SAAAS,GACjB,EAAK2C,SAAS,CAAEkB,WAAY7D,WAzBpC,EAAK4C,MAAQ,CACTmB,QAAS,KACTF,WAAY,KACZS,WAAY,KACZC,eAAgB,MAPL,E,kFAiCG,IAAD,OACjBjF,MAAMH,6CAAsBI,MAAK,SAAAC,GAC7BA,EAASC,OAAOF,MAAK,SAAAS,GACjB,IAAIgE,EAAahE,EAAK8C,KAAI,SAACmB,GAAU,MAAO,CAAEtD,MAAOsD,EAAG,aAAkBC,MAAOD,EAAG,aACpF,EAAKtB,SAAS,CAAEoB,QAASC,Y,+BAMjC,OACI,yBAAK1B,UAAU,aACVF,KAAKQ,MAAMmB,QAAU,kBAAC,IAAD,CAAQA,QAAS3B,KAAKQ,MAAMmB,QAASI,SAAU/B,KAAKqB,eAAmB,8BAC7F,kDACCrB,KAAKQ,MAAMiB,WAAa,kBAAC,EAAD,CAAWO,KAAMhC,KAAKQ,MAAMiB,aAAiB,8BACtE,iEACCzB,KAAKQ,MAAM0B,WAAa,kBAAC,EAAD,CAAWF,KAAMhC,KAAKQ,MAAM0B,aAAiB,8BACtE,wEACClC,KAAKQ,MAAM2B,eAAiB,kBAAC,EAAD,CAAWH,KAAMhC,KAAKQ,MAAM2B,iBAAqB,mC,GArDhDhC,aCqC/BiC,EAhCH,kBACV,6BACE,kBAAC,EAAD,KACE,yBAAK7D,MAAM,eACT,kBAAC,EAAD,OAGF,yBAAKA,MAAM,WACT,kBAAC,EAAD,OAGF,yBAAKA,MAAM,eACT,kBAAC,EAAD,OAGF,yBAAKA,MAAM,sBACT,kBAAC,EAAD,OAGF,yBAAKA,MAAM,kBACT,kBAAC,EAAD,OAGF,yBAAKA,MAAM,iBACT,kBAAC,EAAD,UC9BR8D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.93abc881.chunk.js","sourcesContent":["import React from \"react\";\nimport CRUDTable,\n{\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n} from 'react-crud-table';\n \nconst BASE_URL = 'https://cs411-server.herokuapp.com';\n\nconst instructorService = {\n  fetchItems: (payload) => {\n    return fetch(BASE_URL + '/instructor').then(response => {\n      return response.json();\n    });\n  },\n  create: (instructor) => {\n    return fetch(BASE_URL + '/instructor', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(instructor)\n    });\n  },\n  update: (instructor) => {\n    return fetch(BASE_URL + '/instructor', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(instructor)\n    });\n  },\n  delete: (data) => {\n    return fetch(BASE_URL + '/instructor/' + data.instructorID, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n};\n \nconst styles = {\n  container: { margin: 'auto', width: 'fit-content' },\n};\n \nconst InstructorTable = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"Instructors\"\n      fetchItems={payload => instructorService.fetchItems(payload)}\n    >\n      <Fields>\n        <Field\n          name=\"instructorID\"\n          label=\"instructorID\"\n          hideInCreateForm\n          hideInUpdateForm\n        />\n        <Field\n          name=\"name\"\n          label=\"name\"\n        />\n      </Fields>\n      <CreateForm\n        title=\"Instructor Creation\"\n        message=\"Create a new instructor!\"\n        trigger=\"Create Instructor\"\n        onSubmit={task => instructorService.create(task)}\n        submitText=\"Create\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <UpdateForm\n        title=\"Instructor Update Process\"\n        message=\"Update instructor\"\n        trigger=\"Update\"\n        onSubmit={task => instructorService.update(task)}\n        submitText=\"Update\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <DeleteForm\n        title=\"Instructor Delete Process\"\n        message=\"Are you sure you want to delete the instructor?\"\n        trigger=\"Delete\"\n        onSubmit={task => instructorService.delete(task)}\n        submitText=\"Delete\"\n        validate={(values) => {\n          const errors = {};\n          \n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\n\nInstructorTable.propTypes = {};\n\nexport default InstructorTable;\n","import React from \"react\";\nimport CRUDTable,\n{\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n} from 'react-crud-table';\nconst BASE_URL = 'https://cs411-server.herokuapp.com';\n \nconst assignmentService = {\n  fetchItems: (payload) => {\n    return fetch(BASE_URL + '/assignment').then(response => {\n      return response.json();\n    });\n  },\n  create: (assignment) => {\n    return fetch(BASE_URL + '/assignment', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(assignment)\n    });\n  },\n  update: (assignment) => {\n    return fetch(BASE_URL + '/assignment', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(assignment)\n    });\n  },\n  delete: (data) => {\n    return fetch(BASE_URL + '/assignment/' + data.assignmentID, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n};\n \nconst styles = {\n  container: { margin: 'auto', width: 'fit-content' },\n};\n \nconst AssignmentTable = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"assignments\"\n      fetchItems={payload => assignmentService.fetchItems(payload)}\n    >\n      <Fields>\n        <Field\n          name=\"assignmentID\"\n          label=\"assignmentTable\"\n          hideInCreateForm\n          hideInUpdateForm\n        />\n        <Field\n          name=\"courseID\"\n          label=\"courseID\"\n        />\n        <Field\n          name=\"instructorID\"\n          label=\"instructorID\"\n        />\n        <Field\n          name=\"semester\"\n          label=\"semester\"\n        />\n        <Field\n          name=\"calendarYear\"\n          label=\"calendarYear\"\n        />\n      </Fields>\n      <CreateForm\n        title=\"Assignment Creation\"\n        message=\"Create a new assignment!\"\n        trigger=\"Create assignment\"\n        onSubmit={task => assignmentService.create(task)}\n        submitText=\"Create\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <UpdateForm\n        title=\"Assignment Update Process\"\n        message=\"Update assignment\"\n        trigger=\"Update\"\n        onSubmit={task => assignmentService.update(task)}\n        submitText=\"Update\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <DeleteForm\n        title=\"Assignment Delete Process\"\n        message=\"Are you sure you want to delete the assignment?\"\n        trigger=\"Delete\"\n        onSubmit={task => assignmentService.delete(task)}\n        submitText=\"Delete\"\n        validate={(values) => {\n          const errors = {};\n          \n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\n\nAssignmentTable.propTypes = {};\n\nexport default AssignmentTable;\n","import React from \"react\";\nimport CRUDTable,\n{\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n} from 'react-crud-table';\nconst BASE_URL = 'https://cs411-server.herokuapp.com';\n \nconst courseService = {\n  fetchItems: (payload) => {\n    return fetch(BASE_URL + '/course').then(response => {\n      return response.json();\n    });\n  },\n  create: (course) => {\n    return fetch(BASE_URL + '/course', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(course)\n    });\n  },\n  update: (course) => {\n    return fetch(BASE_URL + '/course', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(course)\n    });\n  },\n  delete: (data) => {\n    return fetch(BASE_URL + '/course/' + data.courseID, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n};\n \nconst styles = {\n  container: { margin: 'auto', width: 'fit-content' },\n};\n \nconst CourseTable = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"course\"\n      fetchItems={payload => courseService.fetchItems(payload)}\n    >\n      <Fields>\n        <Field\n          name=\"courseID\"\n          label=\"courseID\"\n          hideInCreateForm\n          hideInUpdateForm\n        />\n        <Field\n          name=\"courseNumber\"\n          label=\"courseNumber\"\n        />\n        <Field\n          name=\"description\"\n          label=\"description\"\n        />\n        <Field\n          name=\"creditHours\"\n          label=\"creditHours\"\n        />\n      </Fields>\n      <CreateForm\n        title=\"Course Creation\"\n        message=\"Create a new course!\"\n        trigger=\"Create course\"\n        onSubmit={task => courseService.create(task)}\n        submitText=\"Create\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <UpdateForm\n        title=\"Course Update Process\"\n        message=\"Update course\"\n        trigger=\"Update\"\n        onSubmit={task => courseService.update(task)}\n        submitText=\"Update\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <DeleteForm\n        title=\"Course Delete Process\"\n        message=\"Are you sure you want to delete the course?\"\n        trigger=\"Delete\"\n        onSubmit={task => courseService.delete(task)}\n        submitText=\"Delete\"\n        validate={(values) => {\n          const errors = {};\n          \n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\n\nCourseTable.propTypes = {};\n\nexport default CourseTable;\n","import React from \"react\";\nimport CRUDTable,\n{\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n} from 'react-crud-table';\nconst BASE_URL = 'https://cs411-server.herokuapp.com';\n \nconst relatedInstructorService = {\n  fetchItems: (payload) => {\n    return fetch(BASE_URL + '/related_instructor').then(response => {\n      return response.json();\n    });\n  },\n  create: (assignment) => {\n    return fetch(BASE_URL + '/related_instructor', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(assignment)\n    });\n  },\n  update: (assignment) => {\n    return fetch(BASE_URL + '/related_instructor', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(assignment)\n    });\n  },\n  delete: (data) => {\n    return fetch(BASE_URL + '/related_instructor/' + data.relatedID, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n};\n \nconst styles = {\n  container: { margin: 'auto', width: 'fit-content' },\n};\n \nconst RelatedInstructorTable = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"related instructors\"\n      fetchItems={payload => relatedInstructorService.fetchItems(payload)}\n    >\n      <Fields>\n        <Field\n          name=\"relatedID\"\n          label=\"relatedInstructorTable\"\n          hideInCreateForm\n          hideInUpdateForm\n        />\n        <Field\n          name=\"relatedInstructorID1\"\n          label=\"relatedInstructorID1\"\n        />\n        <Field\n          name=\"relatedInstructorID2\"\n          label=\"relatedInstructorID2\"\n        />\n      </Fields>\n      <CreateForm\n        title=\"Related Instructor Creation\"\n        message=\"Create a new instructor relation!\"\n        trigger=\"Create relation\"\n        onSubmit={task => relatedInstructorService.create(task)}\n        submitText=\"Create\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <UpdateForm\n        title=\"Instructor relation Update Process\"\n        message=\"Update instructor relation\"\n        trigger=\"Update\"\n        onSubmit={task => relatedInstructorService.update(task)}\n        submitText=\"Update\"\n        validate={(values) => {\n          const errors = {};\n \n          return errors;\n        }}\n      />\n \n      <DeleteForm\n        title=\"Instructor Relation Delete Process\"\n        message=\"Are you sure you want to delete the assignment?\"\n        trigger=\"Delete\"\n        onSubmit={task => relatedInstructorService.delete(task)}\n        submitText=\"Delete\"\n        validate={(values) => {\n          const errors = {};\n          \n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\n\nRelatedInstructorTable.propTypes = {};\n\nexport default RelatedInstructorTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const { \n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li \n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { Component } from \"react\";\n\nconst BASE_URL = 'https://cs411-server.herokuapp.com';\nexport default class ButtonLoader extends Component {\n  state = {\n    loading: false\n  };\n\n  fetchData = () => {\n    this.setState({ loading: true });\n\n    fetch(BASE_URL + '/update_similarities').then(response => {\n        this.setState( { loading: false });\n    });\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n        <button className=\"loading-button\" onClick={this.fetchData} disabled={loading}>\n            {loading && (\n            <i\n                className=\"fa fa-refresh fa-spin\"\n                style={{ marginRight: \"5px\" }}\n            />\n            )}\n            {loading && <span>Refreshing Course Similarities (about 10 s)</span>}\n            {!loading && <span>Refresh Course Similarities (If you added courses or changed descriptions).</span>}\n        </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport ButtonLoader from './ButtonLoader';\nconst JsonTable = require('ts-react-json-table');\nconst BASE_URL = 'https://cs411-server.herokuapp.com';\n\nexport default class RecommendationPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: null,\n            attributes: null,\n            taughtCourses: null,\n            relatedInstructors: null,\n            recommendedCourses: null,\n        };\n    }\n\n    handleChange = (newValue) => {\n        const instructorID = newValue[\"value\"];\n\n        fetch(BASE_URL + '/course?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ taughtCourses: data });\n            });\n        });\n\n        fetch(BASE_URL + '/related_instructor?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ relatedInstructors: data });\n            });\n        });\n\n        fetch(BASE_URL + '/instructor?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ attributes: data });\n            });\n        });\n\n        fetch(BASE_URL + '/get_recommended_courses?instructor_id=' + instructorID).then(response => {\n            response.json().then(data => {\n                this.setState({ recommendedCourses: data });\n            });\n        });\n    };\n\n    componentWillMount() {\n        fetch(BASE_URL + '/instructor').then(response => {\n            response.json().then(data => {\n                var mappedData = data.map((val) => { return { label: val[\"name\"], value: val[\"instructorID\"]} });\n                this.setState({ options: mappedData });\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <ButtonLoader />\n                {this.state.options ? <Select options={this.state.options} onChange={this.handleChange} /> : <div></div>}\n                <h1>Professor Information</h1>\n                {this.state.attributes ? <JsonTable rows={this.state.attributes} /> : <div />}\n                <h1>Taught Courses</h1>\n                {this.state.taughtCourses ? <JsonTable rows={this.state.taughtCourses} /> : <div />}\n                <h1>Recommended Courses</h1>\n                {this.state.recommendedCourses ? <JsonTable rows={this.state.recommendedCourses} /> : <div />}\n                <h1>Instructors who also taught these courses</h1>\n                {this.state.relatedInstructors ? <JsonTable rows={this.state.relatedInstructors} /> : <div />}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport ButtonLoader from './ButtonLoader';\r\nconst JsonTable = require('ts-react-json-table');\r\nconst BASE_URL = 'https://cs411-server.herokuapp.com';\r\n\r\nexport default class CourseSearchPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: null,\r\n            attributes: null,\r\n            professors: null,\r\n            relatedCourses: null\r\n        };\r\n    }\r\n\r\n    handleChange = (newValue) => {\r\n        const courseID = newValue[\"value\"];\r\n\r\n        fetch(BASE_URL + '/get_instructors_who_taught_this_course?course_id=' + courseID).then(response => {\r\n            response.json().then(data => {\r\n                this.setState({ professors: data });\r\n            });\r\n        });\r\n\r\n        fetch(BASE_URL + '/get_courses_related_to_this_one?course_id=' + courseID).then(response => {\r\n            response.json().then(data => {\r\n                this.setState({ relatedCourses: data });\r\n            });\r\n        });\r\n\r\n        fetch(BASE_URL + '/attributes_of_course?course_id=' + courseID).then(response => {\r\n            response.json().then(data => {\r\n                this.setState({ attributes: data });\r\n            });\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        fetch(BASE_URL + '/course').then(response => {\r\n            response.json().then(data => {\r\n                var mappedData = data.map((val) => { return { label: val[\"courseNumber\"], value: val[\"courseID\"]} });\r\n                this.setState({ options: mappedData });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.options ? <Select options={this.state.options} onChange={this.handleChange} /> : <div></div>}\r\n                <h1>Course Information</h1>\r\n                {this.state.attributes ? <JsonTable rows={this.state.attributes} /> : <div />}\r\n                <h1>Professors who taught this course</h1>\r\n                {this.state.professors ? <JsonTable rows={this.state.professors} /> : <div />}\r\n                <h1>Courses also taught by these instructors</h1>\r\n                {this.state.relatedCourses ? <JsonTable rows={this.state.relatedCourses} /> : <div />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport InstructorTable from './components/InstructorTable'\nimport AssignmentTable from './components/AssignmentTable'\nimport CourseTable from './components/CourseTable'\nimport RelatedInstructorTable from './components/RelatedInstructorTable';\nimport Tabs from './components/Tabs';\n\nimport './index.css'\nimport RecommendationPage from './components/RecommendationPage';\nimport CourseSearchPage from './components/CourseSearchPage';\n\nconst App = () => (\n  <div>\n    <Tabs>\n      <div label=\"Instructors\">\n        <InstructorTable />\n      </div>\n\n      <div label=\"Courses\">\n        <CourseTable />\n      </div>\n\n      <div label=\"Assignments\">\n        <AssignmentTable />\n      </div>\n\n      <div label=\"Related Instrutors\">\n        <RelatedInstructorTable />\n      </div>\n\n      <div label=\"Recommendation\">\n        <RecommendationPage />\n      </div>\n\n      <div label=\"Course Search\">\n        <CourseSearchPage />\n      </div>\n    </Tabs>\n  </div>\n);\n\nApp.propTypes = {};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}